// source: lang/run.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var validate_validate_pb = require('../validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var program_error_pb = require('../program/error_pb.js');
goog.object.extend(proto, program_error_pb);
var program_program_pb = require('../program/program_pb.js');
goog.object.extend(proto, program_program_pb);
var values_values_pb = require('../values/values_pb.js');
goog.object.extend(proto, values_values_pb);
goog.exportSymbol('proto.autokitteh.lang.CallReturnedRunUpdate', null, global);
goog.exportSymbol('proto.autokitteh.lang.CallWaitRunState', null, global);
goog.exportSymbol('proto.autokitteh.lang.CanceledRunState', null, global);
goog.exportSymbol('proto.autokitteh.lang.ClientErrorRunState', null, global);
goog.exportSymbol('proto.autokitteh.lang.CompletedRunState', null, global);
goog.exportSymbol('proto.autokitteh.lang.ErrorRunState', null, global);
goog.exportSymbol('proto.autokitteh.lang.LoadReturnedRunUpdate', null, global);
goog.exportSymbol('proto.autokitteh.lang.LoadWaitRunState', null, global);
goog.exportSymbol('proto.autokitteh.lang.PrintRunUpdate', null, global);
goog.exportSymbol('proto.autokitteh.lang.RunState', null, global);
goog.exportSymbol('proto.autokitteh.lang.RunState.TypeCase', null, global);
goog.exportSymbol('proto.autokitteh.lang.RunStateLogRecord', null, global);
goog.exportSymbol('proto.autokitteh.lang.RunSummary', null, global);
goog.exportSymbol('proto.autokitteh.lang.RunningRunState', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.lang.RunStateLogRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.lang.RunStateLogRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.lang.RunStateLogRecord.displayName = 'proto.autokitteh.lang.RunStateLogRecord';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.lang.RunSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.autokitteh.lang.RunSummary.repeatedFields_, null);
};
goog.inherits(proto.autokitteh.lang.RunSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.lang.RunSummary.displayName = 'proto.autokitteh.lang.RunSummary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.lang.RunState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.autokitteh.lang.RunState.oneofGroups_);
};
goog.inherits(proto.autokitteh.lang.RunState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.lang.RunState.displayName = 'proto.autokitteh.lang.RunState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.lang.RunningRunState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.lang.RunningRunState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.lang.RunningRunState.displayName = 'proto.autokitteh.lang.RunningRunState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.lang.CallWaitRunState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.autokitteh.lang.CallWaitRunState.repeatedFields_, null);
};
goog.inherits(proto.autokitteh.lang.CallWaitRunState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.lang.CallWaitRunState.displayName = 'proto.autokitteh.lang.CallWaitRunState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.lang.LoadWaitRunState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.lang.LoadWaitRunState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.lang.LoadWaitRunState.displayName = 'proto.autokitteh.lang.LoadWaitRunState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.lang.CompletedRunState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.lang.CompletedRunState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.lang.CompletedRunState.displayName = 'proto.autokitteh.lang.CompletedRunState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.lang.CanceledRunState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.autokitteh.lang.CanceledRunState.repeatedFields_, null);
};
goog.inherits(proto.autokitteh.lang.CanceledRunState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.lang.CanceledRunState.displayName = 'proto.autokitteh.lang.CanceledRunState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.lang.ErrorRunState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.lang.ErrorRunState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.lang.ErrorRunState.displayName = 'proto.autokitteh.lang.ErrorRunState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.lang.PrintRunUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.lang.PrintRunUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.lang.PrintRunUpdate.displayName = 'proto.autokitteh.lang.PrintRunUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.lang.CallReturnedRunUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.lang.CallReturnedRunUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.lang.CallReturnedRunUpdate.displayName = 'proto.autokitteh.lang.CallReturnedRunUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.lang.LoadReturnedRunUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.lang.LoadReturnedRunUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.lang.LoadReturnedRunUpdate.displayName = 'proto.autokitteh.lang.LoadReturnedRunUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.lang.ClientErrorRunState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.lang.ClientErrorRunState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.lang.ClientErrorRunState.displayName = 'proto.autokitteh.lang.ClientErrorRunState';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.lang.RunStateLogRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.lang.RunStateLogRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.lang.RunStateLogRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.RunStateLogRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    t: (f = msg.getT()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    state: (f = msg.getState()) && proto.autokitteh.lang.RunState.toObject(includeInstance, f),
    source: (f = msg.getSource()) && program_program_pb.Path.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.lang.RunStateLogRecord}
 */
proto.autokitteh.lang.RunStateLogRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.lang.RunStateLogRecord;
  return proto.autokitteh.lang.RunStateLogRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.lang.RunStateLogRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.lang.RunStateLogRecord}
 */
proto.autokitteh.lang.RunStateLogRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setT(value);
      break;
    case 2:
      var value = new proto.autokitteh.lang.RunState;
      reader.readMessage(value,proto.autokitteh.lang.RunState.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    case 3:
      var value = new program_program_pb.Path;
      reader.readMessage(value,program_program_pb.Path.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.lang.RunStateLogRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.lang.RunStateLogRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.lang.RunStateLogRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.RunStateLogRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getT();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.autokitteh.lang.RunState.serializeBinaryToWriter
    );
  }
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      program_program_pb.Path.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp t = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.autokitteh.lang.RunStateLogRecord.prototype.getT = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.autokitteh.lang.RunStateLogRecord} returns this
*/
proto.autokitteh.lang.RunStateLogRecord.prototype.setT = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.RunStateLogRecord} returns this
 */
proto.autokitteh.lang.RunStateLogRecord.prototype.clearT = function() {
  return this.setT(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.RunStateLogRecord.prototype.hasT = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RunState state = 2;
 * @return {?proto.autokitteh.lang.RunState}
 */
proto.autokitteh.lang.RunStateLogRecord.prototype.getState = function() {
  return /** @type{?proto.autokitteh.lang.RunState} */ (
    jspb.Message.getWrapperField(this, proto.autokitteh.lang.RunState, 2));
};


/**
 * @param {?proto.autokitteh.lang.RunState|undefined} value
 * @return {!proto.autokitteh.lang.RunStateLogRecord} returns this
*/
proto.autokitteh.lang.RunStateLogRecord.prototype.setState = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.RunStateLogRecord} returns this
 */
proto.autokitteh.lang.RunStateLogRecord.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.RunStateLogRecord.prototype.hasState = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional autokitteh.program.Path source = 3;
 * @return {?proto.autokitteh.program.Path}
 */
proto.autokitteh.lang.RunStateLogRecord.prototype.getSource = function() {
  return /** @type{?proto.autokitteh.program.Path} */ (
    jspb.Message.getWrapperField(this, program_program_pb.Path, 3));
};


/**
 * @param {?proto.autokitteh.program.Path|undefined} value
 * @return {!proto.autokitteh.lang.RunStateLogRecord} returns this
*/
proto.autokitteh.lang.RunStateLogRecord.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.RunStateLogRecord} returns this
 */
proto.autokitteh.lang.RunStateLogRecord.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.RunStateLogRecord.prototype.hasSource = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.autokitteh.lang.RunSummary.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.lang.RunSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.lang.RunSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.lang.RunSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.RunSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    logList: jspb.Message.toObjectList(msg.getLogList(),
    proto.autokitteh.lang.RunStateLogRecord.toObject, includeInstance),
    printsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.lang.RunSummary}
 */
proto.autokitteh.lang.RunSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.lang.RunSummary;
  return proto.autokitteh.lang.RunSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.lang.RunSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.lang.RunSummary}
 */
proto.autokitteh.lang.RunSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.autokitteh.lang.RunStateLogRecord;
      reader.readMessage(value,proto.autokitteh.lang.RunStateLogRecord.deserializeBinaryFromReader);
      msg.addLog(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addPrints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.lang.RunSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.lang.RunSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.lang.RunSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.RunSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.autokitteh.lang.RunStateLogRecord.serializeBinaryToWriter
    );
  }
  f = message.getPrintsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated RunStateLogRecord log = 1;
 * @return {!Array<!proto.autokitteh.lang.RunStateLogRecord>}
 */
proto.autokitteh.lang.RunSummary.prototype.getLogList = function() {
  return /** @type{!Array<!proto.autokitteh.lang.RunStateLogRecord>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.autokitteh.lang.RunStateLogRecord, 1));
};


/**
 * @param {!Array<!proto.autokitteh.lang.RunStateLogRecord>} value
 * @return {!proto.autokitteh.lang.RunSummary} returns this
*/
proto.autokitteh.lang.RunSummary.prototype.setLogList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.autokitteh.lang.RunStateLogRecord=} opt_value
 * @param {number=} opt_index
 * @return {!proto.autokitteh.lang.RunStateLogRecord}
 */
proto.autokitteh.lang.RunSummary.prototype.addLog = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.autokitteh.lang.RunStateLogRecord, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.autokitteh.lang.RunSummary} returns this
 */
proto.autokitteh.lang.RunSummary.prototype.clearLogList = function() {
  return this.setLogList([]);
};


/**
 * repeated string prints = 2;
 * @return {!Array<string>}
 */
proto.autokitteh.lang.RunSummary.prototype.getPrintsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.autokitteh.lang.RunSummary} returns this
 */
proto.autokitteh.lang.RunSummary.prototype.setPrintsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.autokitteh.lang.RunSummary} returns this
 */
proto.autokitteh.lang.RunSummary.prototype.addPrints = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.autokitteh.lang.RunSummary} returns this
 */
proto.autokitteh.lang.RunSummary.prototype.clearPrintsList = function() {
  return this.setPrintsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.autokitteh.lang.RunState.oneofGroups_ = [[1,2,3,4,5,6,20,21,22,30]];

/**
 * @enum {number}
 */
proto.autokitteh.lang.RunState.TypeCase = {
  TYPE_NOT_SET: 0,
  RUNNING: 1,
  CALL: 2,
  LOAD: 3,
  COMPLETED: 4,
  CANCELED: 5,
  ERROR: 6,
  PRINT: 20,
  CALLRET: 21,
  LOADRET: 22,
  CLIENT_ERROR: 30
};

/**
 * @return {proto.autokitteh.lang.RunState.TypeCase}
 */
proto.autokitteh.lang.RunState.prototype.getTypeCase = function() {
  return /** @type {proto.autokitteh.lang.RunState.TypeCase} */(jspb.Message.computeOneofCase(this, proto.autokitteh.lang.RunState.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.lang.RunState.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.lang.RunState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.lang.RunState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.RunState.toObject = function(includeInstance, msg) {
  var f, obj = {
    running: (f = msg.getRunning()) && proto.autokitteh.lang.RunningRunState.toObject(includeInstance, f),
    call: (f = msg.getCall()) && proto.autokitteh.lang.CallWaitRunState.toObject(includeInstance, f),
    load: (f = msg.getLoad()) && proto.autokitteh.lang.LoadWaitRunState.toObject(includeInstance, f),
    completed: (f = msg.getCompleted()) && proto.autokitteh.lang.CompletedRunState.toObject(includeInstance, f),
    canceled: (f = msg.getCanceled()) && proto.autokitteh.lang.CanceledRunState.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.autokitteh.lang.ErrorRunState.toObject(includeInstance, f),
    print: (f = msg.getPrint()) && proto.autokitteh.lang.PrintRunUpdate.toObject(includeInstance, f),
    callret: (f = msg.getCallret()) && proto.autokitteh.lang.CallReturnedRunUpdate.toObject(includeInstance, f),
    loadret: (f = msg.getLoadret()) && proto.autokitteh.lang.LoadReturnedRunUpdate.toObject(includeInstance, f),
    clientError: (f = msg.getClientError()) && proto.autokitteh.lang.ClientErrorRunState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.lang.RunState}
 */
proto.autokitteh.lang.RunState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.lang.RunState;
  return proto.autokitteh.lang.RunState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.lang.RunState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.lang.RunState}
 */
proto.autokitteh.lang.RunState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.autokitteh.lang.RunningRunState;
      reader.readMessage(value,proto.autokitteh.lang.RunningRunState.deserializeBinaryFromReader);
      msg.setRunning(value);
      break;
    case 2:
      var value = new proto.autokitteh.lang.CallWaitRunState;
      reader.readMessage(value,proto.autokitteh.lang.CallWaitRunState.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    case 3:
      var value = new proto.autokitteh.lang.LoadWaitRunState;
      reader.readMessage(value,proto.autokitteh.lang.LoadWaitRunState.deserializeBinaryFromReader);
      msg.setLoad(value);
      break;
    case 4:
      var value = new proto.autokitteh.lang.CompletedRunState;
      reader.readMessage(value,proto.autokitteh.lang.CompletedRunState.deserializeBinaryFromReader);
      msg.setCompleted(value);
      break;
    case 5:
      var value = new proto.autokitteh.lang.CanceledRunState;
      reader.readMessage(value,proto.autokitteh.lang.CanceledRunState.deserializeBinaryFromReader);
      msg.setCanceled(value);
      break;
    case 6:
      var value = new proto.autokitteh.lang.ErrorRunState;
      reader.readMessage(value,proto.autokitteh.lang.ErrorRunState.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 20:
      var value = new proto.autokitteh.lang.PrintRunUpdate;
      reader.readMessage(value,proto.autokitteh.lang.PrintRunUpdate.deserializeBinaryFromReader);
      msg.setPrint(value);
      break;
    case 21:
      var value = new proto.autokitteh.lang.CallReturnedRunUpdate;
      reader.readMessage(value,proto.autokitteh.lang.CallReturnedRunUpdate.deserializeBinaryFromReader);
      msg.setCallret(value);
      break;
    case 22:
      var value = new proto.autokitteh.lang.LoadReturnedRunUpdate;
      reader.readMessage(value,proto.autokitteh.lang.LoadReturnedRunUpdate.deserializeBinaryFromReader);
      msg.setLoadret(value);
      break;
    case 30:
      var value = new proto.autokitteh.lang.ClientErrorRunState;
      reader.readMessage(value,proto.autokitteh.lang.ClientErrorRunState.deserializeBinaryFromReader);
      msg.setClientError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.lang.RunState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.lang.RunState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.lang.RunState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.RunState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRunning();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.autokitteh.lang.RunningRunState.serializeBinaryToWriter
    );
  }
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.autokitteh.lang.CallWaitRunState.serializeBinaryToWriter
    );
  }
  f = message.getLoad();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.autokitteh.lang.LoadWaitRunState.serializeBinaryToWriter
    );
  }
  f = message.getCompleted();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.autokitteh.lang.CompletedRunState.serializeBinaryToWriter
    );
  }
  f = message.getCanceled();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.autokitteh.lang.CanceledRunState.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.autokitteh.lang.ErrorRunState.serializeBinaryToWriter
    );
  }
  f = message.getPrint();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.autokitteh.lang.PrintRunUpdate.serializeBinaryToWriter
    );
  }
  f = message.getCallret();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.autokitteh.lang.CallReturnedRunUpdate.serializeBinaryToWriter
    );
  }
  f = message.getLoadret();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.autokitteh.lang.LoadReturnedRunUpdate.serializeBinaryToWriter
    );
  }
  f = message.getClientError();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.autokitteh.lang.ClientErrorRunState.serializeBinaryToWriter
    );
  }
};


/**
 * optional RunningRunState running = 1;
 * @return {?proto.autokitteh.lang.RunningRunState}
 */
proto.autokitteh.lang.RunState.prototype.getRunning = function() {
  return /** @type{?proto.autokitteh.lang.RunningRunState} */ (
    jspb.Message.getWrapperField(this, proto.autokitteh.lang.RunningRunState, 1));
};


/**
 * @param {?proto.autokitteh.lang.RunningRunState|undefined} value
 * @return {!proto.autokitteh.lang.RunState} returns this
*/
proto.autokitteh.lang.RunState.prototype.setRunning = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.autokitteh.lang.RunState.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.RunState} returns this
 */
proto.autokitteh.lang.RunState.prototype.clearRunning = function() {
  return this.setRunning(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.RunState.prototype.hasRunning = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CallWaitRunState call = 2;
 * @return {?proto.autokitteh.lang.CallWaitRunState}
 */
proto.autokitteh.lang.RunState.prototype.getCall = function() {
  return /** @type{?proto.autokitteh.lang.CallWaitRunState} */ (
    jspb.Message.getWrapperField(this, proto.autokitteh.lang.CallWaitRunState, 2));
};


/**
 * @param {?proto.autokitteh.lang.CallWaitRunState|undefined} value
 * @return {!proto.autokitteh.lang.RunState} returns this
*/
proto.autokitteh.lang.RunState.prototype.setCall = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.autokitteh.lang.RunState.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.RunState} returns this
 */
proto.autokitteh.lang.RunState.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.RunState.prototype.hasCall = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LoadWaitRunState load = 3;
 * @return {?proto.autokitteh.lang.LoadWaitRunState}
 */
proto.autokitteh.lang.RunState.prototype.getLoad = function() {
  return /** @type{?proto.autokitteh.lang.LoadWaitRunState} */ (
    jspb.Message.getWrapperField(this, proto.autokitteh.lang.LoadWaitRunState, 3));
};


/**
 * @param {?proto.autokitteh.lang.LoadWaitRunState|undefined} value
 * @return {!proto.autokitteh.lang.RunState} returns this
*/
proto.autokitteh.lang.RunState.prototype.setLoad = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.autokitteh.lang.RunState.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.RunState} returns this
 */
proto.autokitteh.lang.RunState.prototype.clearLoad = function() {
  return this.setLoad(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.RunState.prototype.hasLoad = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CompletedRunState completed = 4;
 * @return {?proto.autokitteh.lang.CompletedRunState}
 */
proto.autokitteh.lang.RunState.prototype.getCompleted = function() {
  return /** @type{?proto.autokitteh.lang.CompletedRunState} */ (
    jspb.Message.getWrapperField(this, proto.autokitteh.lang.CompletedRunState, 4));
};


/**
 * @param {?proto.autokitteh.lang.CompletedRunState|undefined} value
 * @return {!proto.autokitteh.lang.RunState} returns this
*/
proto.autokitteh.lang.RunState.prototype.setCompleted = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.autokitteh.lang.RunState.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.RunState} returns this
 */
proto.autokitteh.lang.RunState.prototype.clearCompleted = function() {
  return this.setCompleted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.RunState.prototype.hasCompleted = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CanceledRunState canceled = 5;
 * @return {?proto.autokitteh.lang.CanceledRunState}
 */
proto.autokitteh.lang.RunState.prototype.getCanceled = function() {
  return /** @type{?proto.autokitteh.lang.CanceledRunState} */ (
    jspb.Message.getWrapperField(this, proto.autokitteh.lang.CanceledRunState, 5));
};


/**
 * @param {?proto.autokitteh.lang.CanceledRunState|undefined} value
 * @return {!proto.autokitteh.lang.RunState} returns this
*/
proto.autokitteh.lang.RunState.prototype.setCanceled = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.autokitteh.lang.RunState.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.RunState} returns this
 */
proto.autokitteh.lang.RunState.prototype.clearCanceled = function() {
  return this.setCanceled(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.RunState.prototype.hasCanceled = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ErrorRunState error = 6;
 * @return {?proto.autokitteh.lang.ErrorRunState}
 */
proto.autokitteh.lang.RunState.prototype.getError = function() {
  return /** @type{?proto.autokitteh.lang.ErrorRunState} */ (
    jspb.Message.getWrapperField(this, proto.autokitteh.lang.ErrorRunState, 6));
};


/**
 * @param {?proto.autokitteh.lang.ErrorRunState|undefined} value
 * @return {!proto.autokitteh.lang.RunState} returns this
*/
proto.autokitteh.lang.RunState.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.autokitteh.lang.RunState.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.RunState} returns this
 */
proto.autokitteh.lang.RunState.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.RunState.prototype.hasError = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PrintRunUpdate print = 20;
 * @return {?proto.autokitteh.lang.PrintRunUpdate}
 */
proto.autokitteh.lang.RunState.prototype.getPrint = function() {
  return /** @type{?proto.autokitteh.lang.PrintRunUpdate} */ (
    jspb.Message.getWrapperField(this, proto.autokitteh.lang.PrintRunUpdate, 20));
};


/**
 * @param {?proto.autokitteh.lang.PrintRunUpdate|undefined} value
 * @return {!proto.autokitteh.lang.RunState} returns this
*/
proto.autokitteh.lang.RunState.prototype.setPrint = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.autokitteh.lang.RunState.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.RunState} returns this
 */
proto.autokitteh.lang.RunState.prototype.clearPrint = function() {
  return this.setPrint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.RunState.prototype.hasPrint = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional CallReturnedRunUpdate callret = 21;
 * @return {?proto.autokitteh.lang.CallReturnedRunUpdate}
 */
proto.autokitteh.lang.RunState.prototype.getCallret = function() {
  return /** @type{?proto.autokitteh.lang.CallReturnedRunUpdate} */ (
    jspb.Message.getWrapperField(this, proto.autokitteh.lang.CallReturnedRunUpdate, 21));
};


/**
 * @param {?proto.autokitteh.lang.CallReturnedRunUpdate|undefined} value
 * @return {!proto.autokitteh.lang.RunState} returns this
*/
proto.autokitteh.lang.RunState.prototype.setCallret = function(value) {
  return jspb.Message.setOneofWrapperField(this, 21, proto.autokitteh.lang.RunState.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.RunState} returns this
 */
proto.autokitteh.lang.RunState.prototype.clearCallret = function() {
  return this.setCallret(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.RunState.prototype.hasCallret = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional LoadReturnedRunUpdate loadret = 22;
 * @return {?proto.autokitteh.lang.LoadReturnedRunUpdate}
 */
proto.autokitteh.lang.RunState.prototype.getLoadret = function() {
  return /** @type{?proto.autokitteh.lang.LoadReturnedRunUpdate} */ (
    jspb.Message.getWrapperField(this, proto.autokitteh.lang.LoadReturnedRunUpdate, 22));
};


/**
 * @param {?proto.autokitteh.lang.LoadReturnedRunUpdate|undefined} value
 * @return {!proto.autokitteh.lang.RunState} returns this
*/
proto.autokitteh.lang.RunState.prototype.setLoadret = function(value) {
  return jspb.Message.setOneofWrapperField(this, 22, proto.autokitteh.lang.RunState.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.RunState} returns this
 */
proto.autokitteh.lang.RunState.prototype.clearLoadret = function() {
  return this.setLoadret(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.RunState.prototype.hasLoadret = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional ClientErrorRunState client_error = 30;
 * @return {?proto.autokitteh.lang.ClientErrorRunState}
 */
proto.autokitteh.lang.RunState.prototype.getClientError = function() {
  return /** @type{?proto.autokitteh.lang.ClientErrorRunState} */ (
    jspb.Message.getWrapperField(this, proto.autokitteh.lang.ClientErrorRunState, 30));
};


/**
 * @param {?proto.autokitteh.lang.ClientErrorRunState|undefined} value
 * @return {!proto.autokitteh.lang.RunState} returns this
*/
proto.autokitteh.lang.RunState.prototype.setClientError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 30, proto.autokitteh.lang.RunState.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.RunState} returns this
 */
proto.autokitteh.lang.RunState.prototype.clearClientError = function() {
  return this.setClientError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.RunState.prototype.hasClientError = function() {
  return jspb.Message.getField(this, 30) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.lang.RunningRunState.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.lang.RunningRunState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.lang.RunningRunState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.RunningRunState.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.lang.RunningRunState}
 */
proto.autokitteh.lang.RunningRunState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.lang.RunningRunState;
  return proto.autokitteh.lang.RunningRunState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.lang.RunningRunState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.lang.RunningRunState}
 */
proto.autokitteh.lang.RunningRunState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.lang.RunningRunState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.lang.RunningRunState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.lang.RunningRunState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.RunningRunState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.autokitteh.lang.CallWaitRunState.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.lang.CallWaitRunState.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.lang.CallWaitRunState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.lang.CallWaitRunState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.CallWaitRunState.toObject = function(includeInstance, msg) {
  var f, obj = {
    call: (f = msg.getCall()) && values_values_pb.Value.toObject(includeInstance, f),
    argsList: jspb.Message.toObjectList(msg.getArgsList(),
    values_values_pb.Value.toObject, includeInstance),
    kwsMap: (f = msg.getKwsMap()) ? f.toObject(includeInstance, proto.autokitteh.values.Value.toObject) : [],
    runSummary: (f = msg.getRunSummary()) && proto.autokitteh.lang.RunSummary.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.lang.CallWaitRunState}
 */
proto.autokitteh.lang.CallWaitRunState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.lang.CallWaitRunState;
  return proto.autokitteh.lang.CallWaitRunState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.lang.CallWaitRunState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.lang.CallWaitRunState}
 */
proto.autokitteh.lang.CallWaitRunState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new values_values_pb.Value;
      reader.readMessage(value,values_values_pb.Value.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    case 2:
      var value = new values_values_pb.Value;
      reader.readMessage(value,values_values_pb.Value.deserializeBinaryFromReader);
      msg.addArgs(value);
      break;
    case 3:
      var value = msg.getKwsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.autokitteh.values.Value.deserializeBinaryFromReader, "", new proto.autokitteh.values.Value());
         });
      break;
    case 4:
      var value = new proto.autokitteh.lang.RunSummary;
      reader.readMessage(value,proto.autokitteh.lang.RunSummary.deserializeBinaryFromReader);
      msg.setRunSummary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.lang.CallWaitRunState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.lang.CallWaitRunState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.lang.CallWaitRunState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.CallWaitRunState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      values_values_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getArgsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      values_values_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getKwsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.autokitteh.values.Value.serializeBinaryToWriter);
  }
  f = message.getRunSummary();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.autokitteh.lang.RunSummary.serializeBinaryToWriter
    );
  }
};


/**
 * optional autokitteh.values.Value call = 1;
 * @return {?proto.autokitteh.values.Value}
 */
proto.autokitteh.lang.CallWaitRunState.prototype.getCall = function() {
  return /** @type{?proto.autokitteh.values.Value} */ (
    jspb.Message.getWrapperField(this, values_values_pb.Value, 1));
};


/**
 * @param {?proto.autokitteh.values.Value|undefined} value
 * @return {!proto.autokitteh.lang.CallWaitRunState} returns this
*/
proto.autokitteh.lang.CallWaitRunState.prototype.setCall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.CallWaitRunState} returns this
 */
proto.autokitteh.lang.CallWaitRunState.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.CallWaitRunState.prototype.hasCall = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated autokitteh.values.Value args = 2;
 * @return {!Array<!proto.autokitteh.values.Value>}
 */
proto.autokitteh.lang.CallWaitRunState.prototype.getArgsList = function() {
  return /** @type{!Array<!proto.autokitteh.values.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, values_values_pb.Value, 2));
};


/**
 * @param {!Array<!proto.autokitteh.values.Value>} value
 * @return {!proto.autokitteh.lang.CallWaitRunState} returns this
*/
proto.autokitteh.lang.CallWaitRunState.prototype.setArgsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.autokitteh.values.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.autokitteh.values.Value}
 */
proto.autokitteh.lang.CallWaitRunState.prototype.addArgs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.autokitteh.values.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.autokitteh.lang.CallWaitRunState} returns this
 */
proto.autokitteh.lang.CallWaitRunState.prototype.clearArgsList = function() {
  return this.setArgsList([]);
};


/**
 * map<string, autokitteh.values.Value> kws = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.autokitteh.values.Value>}
 */
proto.autokitteh.lang.CallWaitRunState.prototype.getKwsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.autokitteh.values.Value>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.autokitteh.values.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.autokitteh.lang.CallWaitRunState} returns this
 */
proto.autokitteh.lang.CallWaitRunState.prototype.clearKwsMap = function() {
  this.getKwsMap().clear();
  return this;};


/**
 * optional RunSummary run_summary = 4;
 * @return {?proto.autokitteh.lang.RunSummary}
 */
proto.autokitteh.lang.CallWaitRunState.prototype.getRunSummary = function() {
  return /** @type{?proto.autokitteh.lang.RunSummary} */ (
    jspb.Message.getWrapperField(this, proto.autokitteh.lang.RunSummary, 4));
};


/**
 * @param {?proto.autokitteh.lang.RunSummary|undefined} value
 * @return {!proto.autokitteh.lang.CallWaitRunState} returns this
*/
proto.autokitteh.lang.CallWaitRunState.prototype.setRunSummary = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.CallWaitRunState} returns this
 */
proto.autokitteh.lang.CallWaitRunState.prototype.clearRunSummary = function() {
  return this.setRunSummary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.CallWaitRunState.prototype.hasRunSummary = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.lang.LoadWaitRunState.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.lang.LoadWaitRunState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.lang.LoadWaitRunState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.LoadWaitRunState.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: (f = msg.getPath()) && program_program_pb.Path.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.lang.LoadWaitRunState}
 */
proto.autokitteh.lang.LoadWaitRunState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.lang.LoadWaitRunState;
  return proto.autokitteh.lang.LoadWaitRunState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.lang.LoadWaitRunState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.lang.LoadWaitRunState}
 */
proto.autokitteh.lang.LoadWaitRunState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new program_program_pb.Path;
      reader.readMessage(value,program_program_pb.Path.deserializeBinaryFromReader);
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.lang.LoadWaitRunState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.lang.LoadWaitRunState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.lang.LoadWaitRunState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.LoadWaitRunState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      program_program_pb.Path.serializeBinaryToWriter
    );
  }
};


/**
 * optional autokitteh.program.Path path = 1;
 * @return {?proto.autokitteh.program.Path}
 */
proto.autokitteh.lang.LoadWaitRunState.prototype.getPath = function() {
  return /** @type{?proto.autokitteh.program.Path} */ (
    jspb.Message.getWrapperField(this, program_program_pb.Path, 1));
};


/**
 * @param {?proto.autokitteh.program.Path|undefined} value
 * @return {!proto.autokitteh.lang.LoadWaitRunState} returns this
*/
proto.autokitteh.lang.LoadWaitRunState.prototype.setPath = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.LoadWaitRunState} returns this
 */
proto.autokitteh.lang.LoadWaitRunState.prototype.clearPath = function() {
  return this.setPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.LoadWaitRunState.prototype.hasPath = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.lang.CompletedRunState.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.lang.CompletedRunState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.lang.CompletedRunState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.CompletedRunState.toObject = function(includeInstance, msg) {
  var f, obj = {
    valsMap: (f = msg.getValsMap()) ? f.toObject(includeInstance, proto.autokitteh.values.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.lang.CompletedRunState}
 */
proto.autokitteh.lang.CompletedRunState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.lang.CompletedRunState;
  return proto.autokitteh.lang.CompletedRunState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.lang.CompletedRunState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.lang.CompletedRunState}
 */
proto.autokitteh.lang.CompletedRunState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getValsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.autokitteh.values.Value.deserializeBinaryFromReader, "", new proto.autokitteh.values.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.lang.CompletedRunState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.lang.CompletedRunState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.lang.CompletedRunState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.CompletedRunState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.autokitteh.values.Value.serializeBinaryToWriter);
  }
};


/**
 * map<string, autokitteh.values.Value> vals = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.autokitteh.values.Value>}
 */
proto.autokitteh.lang.CompletedRunState.prototype.getValsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.autokitteh.values.Value>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.autokitteh.values.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.autokitteh.lang.CompletedRunState} returns this
 */
proto.autokitteh.lang.CompletedRunState.prototype.clearValsMap = function() {
  this.getValsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.autokitteh.lang.CanceledRunState.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.lang.CanceledRunState.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.lang.CanceledRunState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.lang.CanceledRunState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.CanceledRunState.toObject = function(includeInstance, msg) {
  var f, obj = {
    reason: jspb.Message.getFieldWithDefault(msg, 1, ""),
    callstackList: jspb.Message.toObjectList(msg.getCallstackList(),
    program_error_pb.CallFrame.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.lang.CanceledRunState}
 */
proto.autokitteh.lang.CanceledRunState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.lang.CanceledRunState;
  return proto.autokitteh.lang.CanceledRunState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.lang.CanceledRunState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.lang.CanceledRunState}
 */
proto.autokitteh.lang.CanceledRunState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 2:
      var value = new program_error_pb.CallFrame;
      reader.readMessage(value,program_error_pb.CallFrame.deserializeBinaryFromReader);
      msg.addCallstack(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.lang.CanceledRunState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.lang.CanceledRunState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.lang.CanceledRunState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.CanceledRunState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCallstackList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      program_error_pb.CallFrame.serializeBinaryToWriter
    );
  }
};


/**
 * optional string reason = 1;
 * @return {string}
 */
proto.autokitteh.lang.CanceledRunState.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.lang.CanceledRunState} returns this
 */
proto.autokitteh.lang.CanceledRunState.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated autokitteh.program.CallFrame callstack = 2;
 * @return {!Array<!proto.autokitteh.program.CallFrame>}
 */
proto.autokitteh.lang.CanceledRunState.prototype.getCallstackList = function() {
  return /** @type{!Array<!proto.autokitteh.program.CallFrame>} */ (
    jspb.Message.getRepeatedWrapperField(this, program_error_pb.CallFrame, 2));
};


/**
 * @param {!Array<!proto.autokitteh.program.CallFrame>} value
 * @return {!proto.autokitteh.lang.CanceledRunState} returns this
*/
proto.autokitteh.lang.CanceledRunState.prototype.setCallstackList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.autokitteh.program.CallFrame=} opt_value
 * @param {number=} opt_index
 * @return {!proto.autokitteh.program.CallFrame}
 */
proto.autokitteh.lang.CanceledRunState.prototype.addCallstack = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.autokitteh.program.CallFrame, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.autokitteh.lang.CanceledRunState} returns this
 */
proto.autokitteh.lang.CanceledRunState.prototype.clearCallstackList = function() {
  return this.setCallstackList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.lang.ErrorRunState.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.lang.ErrorRunState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.lang.ErrorRunState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.ErrorRunState.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && program_error_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.lang.ErrorRunState}
 */
proto.autokitteh.lang.ErrorRunState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.lang.ErrorRunState;
  return proto.autokitteh.lang.ErrorRunState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.lang.ErrorRunState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.lang.ErrorRunState}
 */
proto.autokitteh.lang.ErrorRunState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new program_error_pb.Error;
      reader.readMessage(value,program_error_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.lang.ErrorRunState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.lang.ErrorRunState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.lang.ErrorRunState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.ErrorRunState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      program_error_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional autokitteh.program.Error error = 1;
 * @return {?proto.autokitteh.program.Error}
 */
proto.autokitteh.lang.ErrorRunState.prototype.getError = function() {
  return /** @type{?proto.autokitteh.program.Error} */ (
    jspb.Message.getWrapperField(this, program_error_pb.Error, 1));
};


/**
 * @param {?proto.autokitteh.program.Error|undefined} value
 * @return {!proto.autokitteh.lang.ErrorRunState} returns this
*/
proto.autokitteh.lang.ErrorRunState.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.ErrorRunState} returns this
 */
proto.autokitteh.lang.ErrorRunState.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.ErrorRunState.prototype.hasError = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.lang.PrintRunUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.lang.PrintRunUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.lang.PrintRunUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.PrintRunUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    text: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.lang.PrintRunUpdate}
 */
proto.autokitteh.lang.PrintRunUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.lang.PrintRunUpdate;
  return proto.autokitteh.lang.PrintRunUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.lang.PrintRunUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.lang.PrintRunUpdate}
 */
proto.autokitteh.lang.PrintRunUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.lang.PrintRunUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.lang.PrintRunUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.lang.PrintRunUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.PrintRunUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string text = 1;
 * @return {string}
 */
proto.autokitteh.lang.PrintRunUpdate.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.lang.PrintRunUpdate} returns this
 */
proto.autokitteh.lang.PrintRunUpdate.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.lang.CallReturnedRunUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.lang.CallReturnedRunUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.lang.CallReturnedRunUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.CallReturnedRunUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && program_error_pb.Error.toObject(includeInstance, f),
    retval: (f = msg.getRetval()) && values_values_pb.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.lang.CallReturnedRunUpdate}
 */
proto.autokitteh.lang.CallReturnedRunUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.lang.CallReturnedRunUpdate;
  return proto.autokitteh.lang.CallReturnedRunUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.lang.CallReturnedRunUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.lang.CallReturnedRunUpdate}
 */
proto.autokitteh.lang.CallReturnedRunUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new program_error_pb.Error;
      reader.readMessage(value,program_error_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 2:
      var value = new values_values_pb.Value;
      reader.readMessage(value,values_values_pb.Value.deserializeBinaryFromReader);
      msg.setRetval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.lang.CallReturnedRunUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.lang.CallReturnedRunUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.lang.CallReturnedRunUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.CallReturnedRunUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      program_error_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getRetval();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      values_values_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional autokitteh.program.Error error = 1;
 * @return {?proto.autokitteh.program.Error}
 */
proto.autokitteh.lang.CallReturnedRunUpdate.prototype.getError = function() {
  return /** @type{?proto.autokitteh.program.Error} */ (
    jspb.Message.getWrapperField(this, program_error_pb.Error, 1));
};


/**
 * @param {?proto.autokitteh.program.Error|undefined} value
 * @return {!proto.autokitteh.lang.CallReturnedRunUpdate} returns this
*/
proto.autokitteh.lang.CallReturnedRunUpdate.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.CallReturnedRunUpdate} returns this
 */
proto.autokitteh.lang.CallReturnedRunUpdate.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.CallReturnedRunUpdate.prototype.hasError = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional autokitteh.values.Value retval = 2;
 * @return {?proto.autokitteh.values.Value}
 */
proto.autokitteh.lang.CallReturnedRunUpdate.prototype.getRetval = function() {
  return /** @type{?proto.autokitteh.values.Value} */ (
    jspb.Message.getWrapperField(this, values_values_pb.Value, 2));
};


/**
 * @param {?proto.autokitteh.values.Value|undefined} value
 * @return {!proto.autokitteh.lang.CallReturnedRunUpdate} returns this
*/
proto.autokitteh.lang.CallReturnedRunUpdate.prototype.setRetval = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.CallReturnedRunUpdate} returns this
 */
proto.autokitteh.lang.CallReturnedRunUpdate.prototype.clearRetval = function() {
  return this.setRetval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.CallReturnedRunUpdate.prototype.hasRetval = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.lang.LoadReturnedRunUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.lang.LoadReturnedRunUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.lang.LoadReturnedRunUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.LoadReturnedRunUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && program_error_pb.Error.toObject(includeInstance, f),
    runSummary: (f = msg.getRunSummary()) && proto.autokitteh.lang.RunSummary.toObject(includeInstance, f),
    valsMap: (f = msg.getValsMap()) ? f.toObject(includeInstance, proto.autokitteh.values.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.lang.LoadReturnedRunUpdate}
 */
proto.autokitteh.lang.LoadReturnedRunUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.lang.LoadReturnedRunUpdate;
  return proto.autokitteh.lang.LoadReturnedRunUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.lang.LoadReturnedRunUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.lang.LoadReturnedRunUpdate}
 */
proto.autokitteh.lang.LoadReturnedRunUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new program_error_pb.Error;
      reader.readMessage(value,program_error_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 2:
      var value = new proto.autokitteh.lang.RunSummary;
      reader.readMessage(value,proto.autokitteh.lang.RunSummary.deserializeBinaryFromReader);
      msg.setRunSummary(value);
      break;
    case 3:
      var value = msg.getValsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.autokitteh.values.Value.deserializeBinaryFromReader, "", new proto.autokitteh.values.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.lang.LoadReturnedRunUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.lang.LoadReturnedRunUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.lang.LoadReturnedRunUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.LoadReturnedRunUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      program_error_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getRunSummary();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.autokitteh.lang.RunSummary.serializeBinaryToWriter
    );
  }
  f = message.getValsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.autokitteh.values.Value.serializeBinaryToWriter);
  }
};


/**
 * optional autokitteh.program.Error error = 1;
 * @return {?proto.autokitteh.program.Error}
 */
proto.autokitteh.lang.LoadReturnedRunUpdate.prototype.getError = function() {
  return /** @type{?proto.autokitteh.program.Error} */ (
    jspb.Message.getWrapperField(this, program_error_pb.Error, 1));
};


/**
 * @param {?proto.autokitteh.program.Error|undefined} value
 * @return {!proto.autokitteh.lang.LoadReturnedRunUpdate} returns this
*/
proto.autokitteh.lang.LoadReturnedRunUpdate.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.LoadReturnedRunUpdate} returns this
 */
proto.autokitteh.lang.LoadReturnedRunUpdate.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.LoadReturnedRunUpdate.prototype.hasError = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RunSummary run_summary = 2;
 * @return {?proto.autokitteh.lang.RunSummary}
 */
proto.autokitteh.lang.LoadReturnedRunUpdate.prototype.getRunSummary = function() {
  return /** @type{?proto.autokitteh.lang.RunSummary} */ (
    jspb.Message.getWrapperField(this, proto.autokitteh.lang.RunSummary, 2));
};


/**
 * @param {?proto.autokitteh.lang.RunSummary|undefined} value
 * @return {!proto.autokitteh.lang.LoadReturnedRunUpdate} returns this
*/
proto.autokitteh.lang.LoadReturnedRunUpdate.prototype.setRunSummary = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.lang.LoadReturnedRunUpdate} returns this
 */
proto.autokitteh.lang.LoadReturnedRunUpdate.prototype.clearRunSummary = function() {
  return this.setRunSummary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.lang.LoadReturnedRunUpdate.prototype.hasRunSummary = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * map<string, autokitteh.values.Value> vals = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.autokitteh.values.Value>}
 */
proto.autokitteh.lang.LoadReturnedRunUpdate.prototype.getValsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.autokitteh.values.Value>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.autokitteh.values.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.autokitteh.lang.LoadReturnedRunUpdate} returns this
 */
proto.autokitteh.lang.LoadReturnedRunUpdate.prototype.clearValsMap = function() {
  this.getValsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.lang.ClientErrorRunState.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.lang.ClientErrorRunState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.lang.ClientErrorRunState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.ClientErrorRunState.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.lang.ClientErrorRunState}
 */
proto.autokitteh.lang.ClientErrorRunState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.lang.ClientErrorRunState;
  return proto.autokitteh.lang.ClientErrorRunState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.lang.ClientErrorRunState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.lang.ClientErrorRunState}
 */
proto.autokitteh.lang.ClientErrorRunState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.lang.ClientErrorRunState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.lang.ClientErrorRunState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.lang.ClientErrorRunState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.lang.ClientErrorRunState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string error = 1;
 * @return {string}
 */
proto.autokitteh.lang.ClientErrorRunState.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.lang.ClientErrorRunState} returns this
 */
proto.autokitteh.lang.ClientErrorRunState.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.autokitteh.lang);
