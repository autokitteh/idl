// source: langsvc/langrunsvc.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var validate_validate_pb = require('../validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
var lang_run_pb = require('../lang/run_pb.js');
goog.object.extend(proto, lang_run_pb);
var program_error_pb = require('../program/error_pb.js');
goog.object.extend(proto, program_error_pb);
var program_program_pb = require('../program/program_pb.js');
goog.object.extend(proto, program_program_pb);
var values_values_pb = require('../values/values_pb.js');
goog.object.extend(proto, values_values_pb);
goog.exportSymbol('proto.autokitteh.langsvc.CallFunctionRequest', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.ListRun', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.ListRuns', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.ListRunsRequest', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.ListRunsResponse', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.RunCallReturnRequest', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.RunCallReturnResponse', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.RunCancelRequest', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.RunCancelResponse', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.RunDiscardRequest', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.RunDiscardResponse', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.RunGetRequest', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.RunGetResponse', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.RunLoadReturnRequest', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.RunLoadReturnResponse', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.RunRequest', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.RunUpdate', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.RunRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.RunRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.RunRequest.displayName = 'proto.autokitteh.langsvc.RunRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.CallFunctionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.autokitteh.langsvc.CallFunctionRequest.repeatedFields_, null);
};
goog.inherits(proto.autokitteh.langsvc.CallFunctionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.CallFunctionRequest.displayName = 'proto.autokitteh.langsvc.CallFunctionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.RunGetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.RunGetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.RunGetRequest.displayName = 'proto.autokitteh.langsvc.RunGetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.RunDiscardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.RunDiscardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.RunDiscardRequest.displayName = 'proto.autokitteh.langsvc.RunDiscardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.RunDiscardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.RunDiscardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.RunDiscardResponse.displayName = 'proto.autokitteh.langsvc.RunDiscardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.RunGetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.RunGetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.RunGetResponse.displayName = 'proto.autokitteh.langsvc.RunGetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.RunUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.RunUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.RunUpdate.displayName = 'proto.autokitteh.langsvc.RunUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.RunCallReturnRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.RunCallReturnRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.RunCallReturnRequest.displayName = 'proto.autokitteh.langsvc.RunCallReturnRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.RunCallReturnResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.RunCallReturnResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.RunCallReturnResponse.displayName = 'proto.autokitteh.langsvc.RunCallReturnResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.RunLoadReturnRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.RunLoadReturnRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.RunLoadReturnRequest.displayName = 'proto.autokitteh.langsvc.RunLoadReturnRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.RunLoadReturnResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.RunLoadReturnResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.RunLoadReturnResponse.displayName = 'proto.autokitteh.langsvc.RunLoadReturnResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.RunCancelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.RunCancelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.RunCancelRequest.displayName = 'proto.autokitteh.langsvc.RunCancelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.RunCancelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.RunCancelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.RunCancelResponse.displayName = 'proto.autokitteh.langsvc.RunCancelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.ListRunsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.ListRunsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.ListRunsRequest.displayName = 'proto.autokitteh.langsvc.ListRunsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.ListRun = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.ListRun, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.ListRun.displayName = 'proto.autokitteh.langsvc.ListRun';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.ListRuns = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.autokitteh.langsvc.ListRuns.repeatedFields_, null);
};
goog.inherits(proto.autokitteh.langsvc.ListRuns, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.ListRuns.displayName = 'proto.autokitteh.langsvc.ListRuns';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.ListRunsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.ListRunsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.ListRunsResponse.displayName = 'proto.autokitteh.langsvc.ListRunsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.RunRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.RunRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.RunRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    scope: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    module: (f = msg.getModule()) && program_program_pb.Module.toObject(includeInstance, f),
    predeclsMap: (f = msg.getPredeclsMap()) ? f.toObject(includeInstance, proto.autokitteh.values.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.RunRequest}
 */
proto.autokitteh.langsvc.RunRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.RunRequest;
  return proto.autokitteh.langsvc.RunRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.RunRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.RunRequest}
 */
proto.autokitteh.langsvc.RunRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = new program_program_pb.Module;
      reader.readMessage(value,program_program_pb.Module.deserializeBinaryFromReader);
      msg.setModule(value);
      break;
    case 4:
      var value = msg.getPredeclsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.autokitteh.values.Value.deserializeBinaryFromReader, "", new proto.autokitteh.values.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.RunRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.RunRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.RunRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getModule();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      program_program_pb.Module.serializeBinaryToWriter
    );
  }
  f = message.getPredeclsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.autokitteh.values.Value.serializeBinaryToWriter);
  }
};


/**
 * optional string scope = 1;
 * @return {string}
 */
proto.autokitteh.langsvc.RunRequest.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.langsvc.RunRequest} returns this
 */
proto.autokitteh.langsvc.RunRequest.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.autokitteh.langsvc.RunRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.langsvc.RunRequest} returns this
 */
proto.autokitteh.langsvc.RunRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional autokitteh.program.Module module = 3;
 * @return {?proto.autokitteh.program.Module}
 */
proto.autokitteh.langsvc.RunRequest.prototype.getModule = function() {
  return /** @type{?proto.autokitteh.program.Module} */ (
    jspb.Message.getWrapperField(this, program_program_pb.Module, 3));
};


/**
 * @param {?proto.autokitteh.program.Module|undefined} value
 * @return {!proto.autokitteh.langsvc.RunRequest} returns this
*/
proto.autokitteh.langsvc.RunRequest.prototype.setModule = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.langsvc.RunRequest} returns this
 */
proto.autokitteh.langsvc.RunRequest.prototype.clearModule = function() {
  return this.setModule(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.langsvc.RunRequest.prototype.hasModule = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, autokitteh.values.Value> predecls = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.autokitteh.values.Value>}
 */
proto.autokitteh.langsvc.RunRequest.prototype.getPredeclsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.autokitteh.values.Value>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.autokitteh.values.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.autokitteh.langsvc.RunRequest} returns this
 */
proto.autokitteh.langsvc.RunRequest.prototype.clearPredeclsMap = function() {
  this.getPredeclsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.autokitteh.langsvc.CallFunctionRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.CallFunctionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.CallFunctionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.CallFunctionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.CallFunctionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    runId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    f: (f = msg.getF()) && values_values_pb.Value.toObject(includeInstance, f),
    argsList: jspb.Message.toObjectList(msg.getArgsList(),
    values_values_pb.Value.toObject, includeInstance),
    kwargsMap: (f = msg.getKwargsMap()) ? f.toObject(includeInstance, proto.autokitteh.values.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.CallFunctionRequest}
 */
proto.autokitteh.langsvc.CallFunctionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.CallFunctionRequest;
  return proto.autokitteh.langsvc.CallFunctionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.CallFunctionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.CallFunctionRequest}
 */
proto.autokitteh.langsvc.CallFunctionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRunId(value);
      break;
    case 2:
      var value = new values_values_pb.Value;
      reader.readMessage(value,values_values_pb.Value.deserializeBinaryFromReader);
      msg.setF(value);
      break;
    case 3:
      var value = new values_values_pb.Value;
      reader.readMessage(value,values_values_pb.Value.deserializeBinaryFromReader);
      msg.addArgs(value);
      break;
    case 4:
      var value = msg.getKwargsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.autokitteh.values.Value.deserializeBinaryFromReader, "", new proto.autokitteh.values.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.CallFunctionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.CallFunctionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.CallFunctionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.CallFunctionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRunId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getF();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      values_values_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getArgsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      values_values_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getKwargsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.autokitteh.values.Value.serializeBinaryToWriter);
  }
};


/**
 * optional string run_id = 1;
 * @return {string}
 */
proto.autokitteh.langsvc.CallFunctionRequest.prototype.getRunId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.langsvc.CallFunctionRequest} returns this
 */
proto.autokitteh.langsvc.CallFunctionRequest.prototype.setRunId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional autokitteh.values.Value f = 2;
 * @return {?proto.autokitteh.values.Value}
 */
proto.autokitteh.langsvc.CallFunctionRequest.prototype.getF = function() {
  return /** @type{?proto.autokitteh.values.Value} */ (
    jspb.Message.getWrapperField(this, values_values_pb.Value, 2));
};


/**
 * @param {?proto.autokitteh.values.Value|undefined} value
 * @return {!proto.autokitteh.langsvc.CallFunctionRequest} returns this
*/
proto.autokitteh.langsvc.CallFunctionRequest.prototype.setF = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.langsvc.CallFunctionRequest} returns this
 */
proto.autokitteh.langsvc.CallFunctionRequest.prototype.clearF = function() {
  return this.setF(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.langsvc.CallFunctionRequest.prototype.hasF = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated autokitteh.values.Value args = 3;
 * @return {!Array<!proto.autokitteh.values.Value>}
 */
proto.autokitteh.langsvc.CallFunctionRequest.prototype.getArgsList = function() {
  return /** @type{!Array<!proto.autokitteh.values.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, values_values_pb.Value, 3));
};


/**
 * @param {!Array<!proto.autokitteh.values.Value>} value
 * @return {!proto.autokitteh.langsvc.CallFunctionRequest} returns this
*/
proto.autokitteh.langsvc.CallFunctionRequest.prototype.setArgsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.autokitteh.values.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.autokitteh.values.Value}
 */
proto.autokitteh.langsvc.CallFunctionRequest.prototype.addArgs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.autokitteh.values.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.autokitteh.langsvc.CallFunctionRequest} returns this
 */
proto.autokitteh.langsvc.CallFunctionRequest.prototype.clearArgsList = function() {
  return this.setArgsList([]);
};


/**
 * map<string, autokitteh.values.Value> kwargs = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.autokitteh.values.Value>}
 */
proto.autokitteh.langsvc.CallFunctionRequest.prototype.getKwargsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.autokitteh.values.Value>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.autokitteh.values.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.autokitteh.langsvc.CallFunctionRequest} returns this
 */
proto.autokitteh.langsvc.CallFunctionRequest.prototype.clearKwargsMap = function() {
  this.getKwargsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.RunGetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.RunGetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.RunGetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunGetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    runId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    getSummary: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.RunGetRequest}
 */
proto.autokitteh.langsvc.RunGetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.RunGetRequest;
  return proto.autokitteh.langsvc.RunGetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.RunGetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.RunGetRequest}
 */
proto.autokitteh.langsvc.RunGetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRunId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGetSummary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.RunGetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.RunGetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.RunGetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunGetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRunId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGetSummary();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string run_id = 1;
 * @return {string}
 */
proto.autokitteh.langsvc.RunGetRequest.prototype.getRunId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.langsvc.RunGetRequest} returns this
 */
proto.autokitteh.langsvc.RunGetRequest.prototype.setRunId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool get_summary = 2;
 * @return {boolean}
 */
proto.autokitteh.langsvc.RunGetRequest.prototype.getGetSummary = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.autokitteh.langsvc.RunGetRequest} returns this
 */
proto.autokitteh.langsvc.RunGetRequest.prototype.setGetSummary = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.RunDiscardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.RunDiscardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.RunDiscardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunDiscardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.RunDiscardRequest}
 */
proto.autokitteh.langsvc.RunDiscardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.RunDiscardRequest;
  return proto.autokitteh.langsvc.RunDiscardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.RunDiscardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.RunDiscardRequest}
 */
proto.autokitteh.langsvc.RunDiscardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.RunDiscardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.RunDiscardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.RunDiscardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunDiscardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.autokitteh.langsvc.RunDiscardRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.langsvc.RunDiscardRequest} returns this
 */
proto.autokitteh.langsvc.RunDiscardRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.RunDiscardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.RunDiscardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.RunDiscardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunDiscardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.RunDiscardResponse}
 */
proto.autokitteh.langsvc.RunDiscardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.RunDiscardResponse;
  return proto.autokitteh.langsvc.RunDiscardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.RunDiscardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.RunDiscardResponse}
 */
proto.autokitteh.langsvc.RunDiscardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.RunDiscardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.RunDiscardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.RunDiscardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunDiscardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.RunGetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.RunGetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.RunGetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunGetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    summary: (f = msg.getSummary()) && lang_run_pb.RunSummary.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.RunGetResponse}
 */
proto.autokitteh.langsvc.RunGetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.RunGetResponse;
  return proto.autokitteh.langsvc.RunGetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.RunGetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.RunGetResponse}
 */
proto.autokitteh.langsvc.RunGetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new lang_run_pb.RunSummary;
      reader.readMessage(value,lang_run_pb.RunSummary.deserializeBinaryFromReader);
      msg.setSummary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.RunGetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.RunGetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.RunGetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunGetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSummary();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      lang_run_pb.RunSummary.serializeBinaryToWriter
    );
  }
};


/**
 * optional autokitteh.lang.RunSummary summary = 1;
 * @return {?proto.autokitteh.lang.RunSummary}
 */
proto.autokitteh.langsvc.RunGetResponse.prototype.getSummary = function() {
  return /** @type{?proto.autokitteh.lang.RunSummary} */ (
    jspb.Message.getWrapperField(this, lang_run_pb.RunSummary, 1));
};


/**
 * @param {?proto.autokitteh.lang.RunSummary|undefined} value
 * @return {!proto.autokitteh.langsvc.RunGetResponse} returns this
*/
proto.autokitteh.langsvc.RunGetResponse.prototype.setSummary = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.langsvc.RunGetResponse} returns this
 */
proto.autokitteh.langsvc.RunGetResponse.prototype.clearSummary = function() {
  return this.setSummary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.langsvc.RunGetResponse.prototype.hasSummary = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.RunUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.RunUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.RunUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    runId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    t: (f = msg.getT()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    prev: (f = msg.getPrev()) && lang_run_pb.RunState.toObject(includeInstance, f),
    next: (f = msg.getNext()) && lang_run_pb.RunState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.RunUpdate}
 */
proto.autokitteh.langsvc.RunUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.RunUpdate;
  return proto.autokitteh.langsvc.RunUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.RunUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.RunUpdate}
 */
proto.autokitteh.langsvc.RunUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRunId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setT(value);
      break;
    case 3:
      var value = new lang_run_pb.RunState;
      reader.readMessage(value,lang_run_pb.RunState.deserializeBinaryFromReader);
      msg.setPrev(value);
      break;
    case 4:
      var value = new lang_run_pb.RunState;
      reader.readMessage(value,lang_run_pb.RunState.deserializeBinaryFromReader);
      msg.setNext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.RunUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.RunUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.RunUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRunId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getT();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPrev();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      lang_run_pb.RunState.serializeBinaryToWriter
    );
  }
  f = message.getNext();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      lang_run_pb.RunState.serializeBinaryToWriter
    );
  }
};


/**
 * optional string run_id = 1;
 * @return {string}
 */
proto.autokitteh.langsvc.RunUpdate.prototype.getRunId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.langsvc.RunUpdate} returns this
 */
proto.autokitteh.langsvc.RunUpdate.prototype.setRunId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp t = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.autokitteh.langsvc.RunUpdate.prototype.getT = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.autokitteh.langsvc.RunUpdate} returns this
*/
proto.autokitteh.langsvc.RunUpdate.prototype.setT = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.langsvc.RunUpdate} returns this
 */
proto.autokitteh.langsvc.RunUpdate.prototype.clearT = function() {
  return this.setT(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.langsvc.RunUpdate.prototype.hasT = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional autokitteh.lang.RunState prev = 3;
 * @return {?proto.autokitteh.lang.RunState}
 */
proto.autokitteh.langsvc.RunUpdate.prototype.getPrev = function() {
  return /** @type{?proto.autokitteh.lang.RunState} */ (
    jspb.Message.getWrapperField(this, lang_run_pb.RunState, 3));
};


/**
 * @param {?proto.autokitteh.lang.RunState|undefined} value
 * @return {!proto.autokitteh.langsvc.RunUpdate} returns this
*/
proto.autokitteh.langsvc.RunUpdate.prototype.setPrev = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.langsvc.RunUpdate} returns this
 */
proto.autokitteh.langsvc.RunUpdate.prototype.clearPrev = function() {
  return this.setPrev(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.langsvc.RunUpdate.prototype.hasPrev = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional autokitteh.lang.RunState next = 4;
 * @return {?proto.autokitteh.lang.RunState}
 */
proto.autokitteh.langsvc.RunUpdate.prototype.getNext = function() {
  return /** @type{?proto.autokitteh.lang.RunState} */ (
    jspb.Message.getWrapperField(this, lang_run_pb.RunState, 4));
};


/**
 * @param {?proto.autokitteh.lang.RunState|undefined} value
 * @return {!proto.autokitteh.langsvc.RunUpdate} returns this
*/
proto.autokitteh.langsvc.RunUpdate.prototype.setNext = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.langsvc.RunUpdate} returns this
 */
proto.autokitteh.langsvc.RunUpdate.prototype.clearNext = function() {
  return this.setNext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.langsvc.RunUpdate.prototype.hasNext = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.RunCallReturnRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.RunCallReturnRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.RunCallReturnRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunCallReturnRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    runId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && program_error_pb.Error.toObject(includeInstance, f),
    retval: (f = msg.getRetval()) && values_values_pb.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.RunCallReturnRequest}
 */
proto.autokitteh.langsvc.RunCallReturnRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.RunCallReturnRequest;
  return proto.autokitteh.langsvc.RunCallReturnRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.RunCallReturnRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.RunCallReturnRequest}
 */
proto.autokitteh.langsvc.RunCallReturnRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRunId(value);
      break;
    case 2:
      var value = new program_error_pb.Error;
      reader.readMessage(value,program_error_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 3:
      var value = new values_values_pb.Value;
      reader.readMessage(value,values_values_pb.Value.deserializeBinaryFromReader);
      msg.setRetval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.RunCallReturnRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.RunCallReturnRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.RunCallReturnRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunCallReturnRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRunId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      program_error_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getRetval();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      values_values_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional string run_id = 1;
 * @return {string}
 */
proto.autokitteh.langsvc.RunCallReturnRequest.prototype.getRunId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.langsvc.RunCallReturnRequest} returns this
 */
proto.autokitteh.langsvc.RunCallReturnRequest.prototype.setRunId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional autokitteh.program.Error error = 2;
 * @return {?proto.autokitteh.program.Error}
 */
proto.autokitteh.langsvc.RunCallReturnRequest.prototype.getError = function() {
  return /** @type{?proto.autokitteh.program.Error} */ (
    jspb.Message.getWrapperField(this, program_error_pb.Error, 2));
};


/**
 * @param {?proto.autokitteh.program.Error|undefined} value
 * @return {!proto.autokitteh.langsvc.RunCallReturnRequest} returns this
*/
proto.autokitteh.langsvc.RunCallReturnRequest.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.langsvc.RunCallReturnRequest} returns this
 */
proto.autokitteh.langsvc.RunCallReturnRequest.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.langsvc.RunCallReturnRequest.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional autokitteh.values.Value retval = 3;
 * @return {?proto.autokitteh.values.Value}
 */
proto.autokitteh.langsvc.RunCallReturnRequest.prototype.getRetval = function() {
  return /** @type{?proto.autokitteh.values.Value} */ (
    jspb.Message.getWrapperField(this, values_values_pb.Value, 3));
};


/**
 * @param {?proto.autokitteh.values.Value|undefined} value
 * @return {!proto.autokitteh.langsvc.RunCallReturnRequest} returns this
*/
proto.autokitteh.langsvc.RunCallReturnRequest.prototype.setRetval = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.langsvc.RunCallReturnRequest} returns this
 */
proto.autokitteh.langsvc.RunCallReturnRequest.prototype.clearRetval = function() {
  return this.setRetval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.langsvc.RunCallReturnRequest.prototype.hasRetval = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.RunCallReturnResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.RunCallReturnResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.RunCallReturnResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunCallReturnResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.RunCallReturnResponse}
 */
proto.autokitteh.langsvc.RunCallReturnResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.RunCallReturnResponse;
  return proto.autokitteh.langsvc.RunCallReturnResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.RunCallReturnResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.RunCallReturnResponse}
 */
proto.autokitteh.langsvc.RunCallReturnResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.RunCallReturnResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.RunCallReturnResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.RunCallReturnResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunCallReturnResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.RunLoadReturnRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.RunLoadReturnRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.RunLoadReturnRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunLoadReturnRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    runId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && program_error_pb.Error.toObject(includeInstance, f),
    runSummary: (f = msg.getRunSummary()) && lang_run_pb.RunSummary.toObject(includeInstance, f),
    valuesMap: (f = msg.getValuesMap()) ? f.toObject(includeInstance, proto.autokitteh.values.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.RunLoadReturnRequest}
 */
proto.autokitteh.langsvc.RunLoadReturnRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.RunLoadReturnRequest;
  return proto.autokitteh.langsvc.RunLoadReturnRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.RunLoadReturnRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.RunLoadReturnRequest}
 */
proto.autokitteh.langsvc.RunLoadReturnRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRunId(value);
      break;
    case 2:
      var value = new program_error_pb.Error;
      reader.readMessage(value,program_error_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 3:
      var value = new lang_run_pb.RunSummary;
      reader.readMessage(value,lang_run_pb.RunSummary.deserializeBinaryFromReader);
      msg.setRunSummary(value);
      break;
    case 4:
      var value = msg.getValuesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.autokitteh.values.Value.deserializeBinaryFromReader, "", new proto.autokitteh.values.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.RunLoadReturnRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.RunLoadReturnRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.RunLoadReturnRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunLoadReturnRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRunId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      program_error_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getRunSummary();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      lang_run_pb.RunSummary.serializeBinaryToWriter
    );
  }
  f = message.getValuesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.autokitteh.values.Value.serializeBinaryToWriter);
  }
};


/**
 * optional string run_id = 1;
 * @return {string}
 */
proto.autokitteh.langsvc.RunLoadReturnRequest.prototype.getRunId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.langsvc.RunLoadReturnRequest} returns this
 */
proto.autokitteh.langsvc.RunLoadReturnRequest.prototype.setRunId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional autokitteh.program.Error error = 2;
 * @return {?proto.autokitteh.program.Error}
 */
proto.autokitteh.langsvc.RunLoadReturnRequest.prototype.getError = function() {
  return /** @type{?proto.autokitteh.program.Error} */ (
    jspb.Message.getWrapperField(this, program_error_pb.Error, 2));
};


/**
 * @param {?proto.autokitteh.program.Error|undefined} value
 * @return {!proto.autokitteh.langsvc.RunLoadReturnRequest} returns this
*/
proto.autokitteh.langsvc.RunLoadReturnRequest.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.langsvc.RunLoadReturnRequest} returns this
 */
proto.autokitteh.langsvc.RunLoadReturnRequest.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.langsvc.RunLoadReturnRequest.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional autokitteh.lang.RunSummary run_summary = 3;
 * @return {?proto.autokitteh.lang.RunSummary}
 */
proto.autokitteh.langsvc.RunLoadReturnRequest.prototype.getRunSummary = function() {
  return /** @type{?proto.autokitteh.lang.RunSummary} */ (
    jspb.Message.getWrapperField(this, lang_run_pb.RunSummary, 3));
};


/**
 * @param {?proto.autokitteh.lang.RunSummary|undefined} value
 * @return {!proto.autokitteh.langsvc.RunLoadReturnRequest} returns this
*/
proto.autokitteh.langsvc.RunLoadReturnRequest.prototype.setRunSummary = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.langsvc.RunLoadReturnRequest} returns this
 */
proto.autokitteh.langsvc.RunLoadReturnRequest.prototype.clearRunSummary = function() {
  return this.setRunSummary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.langsvc.RunLoadReturnRequest.prototype.hasRunSummary = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, autokitteh.values.Value> values = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.autokitteh.values.Value>}
 */
proto.autokitteh.langsvc.RunLoadReturnRequest.prototype.getValuesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.autokitteh.values.Value>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.autokitteh.values.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.autokitteh.langsvc.RunLoadReturnRequest} returns this
 */
proto.autokitteh.langsvc.RunLoadReturnRequest.prototype.clearValuesMap = function() {
  this.getValuesMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.RunLoadReturnResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.RunLoadReturnResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.RunLoadReturnResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunLoadReturnResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.RunLoadReturnResponse}
 */
proto.autokitteh.langsvc.RunLoadReturnResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.RunLoadReturnResponse;
  return proto.autokitteh.langsvc.RunLoadReturnResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.RunLoadReturnResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.RunLoadReturnResponse}
 */
proto.autokitteh.langsvc.RunLoadReturnResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.RunLoadReturnResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.RunLoadReturnResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.RunLoadReturnResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunLoadReturnResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.RunCancelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.RunCancelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.RunCancelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunCancelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    runId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.RunCancelRequest}
 */
proto.autokitteh.langsvc.RunCancelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.RunCancelRequest;
  return proto.autokitteh.langsvc.RunCancelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.RunCancelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.RunCancelRequest}
 */
proto.autokitteh.langsvc.RunCancelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRunId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.RunCancelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.RunCancelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.RunCancelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunCancelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRunId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string run_id = 1;
 * @return {string}
 */
proto.autokitteh.langsvc.RunCancelRequest.prototype.getRunId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.langsvc.RunCancelRequest} returns this
 */
proto.autokitteh.langsvc.RunCancelRequest.prototype.setRunId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.autokitteh.langsvc.RunCancelRequest.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.langsvc.RunCancelRequest} returns this
 */
proto.autokitteh.langsvc.RunCancelRequest.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.RunCancelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.RunCancelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.RunCancelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunCancelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.RunCancelResponse}
 */
proto.autokitteh.langsvc.RunCancelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.RunCancelResponse;
  return proto.autokitteh.langsvc.RunCancelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.RunCancelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.RunCancelResponse}
 */
proto.autokitteh.langsvc.RunCancelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.RunCancelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.RunCancelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.RunCancelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.RunCancelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.ListRunsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.ListRunsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.ListRunsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.ListRunsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.ListRunsRequest}
 */
proto.autokitteh.langsvc.ListRunsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.ListRunsRequest;
  return proto.autokitteh.langsvc.ListRunsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.ListRunsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.ListRunsRequest}
 */
proto.autokitteh.langsvc.ListRunsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.ListRunsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.ListRunsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.ListRunsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.ListRunsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.ListRun.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.ListRun.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.ListRun} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.ListRun.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.ListRun}
 */
proto.autokitteh.langsvc.ListRun.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.ListRun;
  return proto.autokitteh.langsvc.ListRun.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.ListRun} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.ListRun}
 */
proto.autokitteh.langsvc.ListRun.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.ListRun.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.ListRun.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.ListRun} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.ListRun.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.autokitteh.langsvc.ListRun.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.langsvc.ListRun} returns this
 */
proto.autokitteh.langsvc.ListRun.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.autokitteh.langsvc.ListRuns.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.ListRuns.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.ListRuns.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.ListRuns} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.ListRuns.toObject = function(includeInstance, msg) {
  var f, obj = {
    runsList: jspb.Message.toObjectList(msg.getRunsList(),
    proto.autokitteh.langsvc.ListRun.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.ListRuns}
 */
proto.autokitteh.langsvc.ListRuns.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.ListRuns;
  return proto.autokitteh.langsvc.ListRuns.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.ListRuns} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.ListRuns}
 */
proto.autokitteh.langsvc.ListRuns.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.autokitteh.langsvc.ListRun;
      reader.readMessage(value,proto.autokitteh.langsvc.ListRun.deserializeBinaryFromReader);
      msg.addRuns(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.ListRuns.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.ListRuns.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.ListRuns} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.ListRuns.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRunsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.autokitteh.langsvc.ListRun.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListRun runs = 1;
 * @return {!Array<!proto.autokitteh.langsvc.ListRun>}
 */
proto.autokitteh.langsvc.ListRuns.prototype.getRunsList = function() {
  return /** @type{!Array<!proto.autokitteh.langsvc.ListRun>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.autokitteh.langsvc.ListRun, 1));
};


/**
 * @param {!Array<!proto.autokitteh.langsvc.ListRun>} value
 * @return {!proto.autokitteh.langsvc.ListRuns} returns this
*/
proto.autokitteh.langsvc.ListRuns.prototype.setRunsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.autokitteh.langsvc.ListRun=} opt_value
 * @param {number=} opt_index
 * @return {!proto.autokitteh.langsvc.ListRun}
 */
proto.autokitteh.langsvc.ListRuns.prototype.addRuns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.autokitteh.langsvc.ListRun, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.autokitteh.langsvc.ListRuns} returns this
 */
proto.autokitteh.langsvc.ListRuns.prototype.clearRunsList = function() {
  return this.setRunsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.ListRunsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.ListRunsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.ListRunsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.ListRunsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    statesMap: (f = msg.getStatesMap()) ? f.toObject(includeInstance, proto.autokitteh.langsvc.ListRuns.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.ListRunsResponse}
 */
proto.autokitteh.langsvc.ListRunsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.ListRunsResponse;
  return proto.autokitteh.langsvc.ListRunsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.ListRunsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.ListRunsResponse}
 */
proto.autokitteh.langsvc.ListRunsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getStatesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.autokitteh.langsvc.ListRuns.deserializeBinaryFromReader, "", new proto.autokitteh.langsvc.ListRuns());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.ListRunsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.ListRunsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.ListRunsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.ListRunsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.autokitteh.langsvc.ListRuns.serializeBinaryToWriter);
  }
};


/**
 * map<string, ListRuns> states = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.autokitteh.langsvc.ListRuns>}
 */
proto.autokitteh.langsvc.ListRunsResponse.prototype.getStatesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.autokitteh.langsvc.ListRuns>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.autokitteh.langsvc.ListRuns));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.autokitteh.langsvc.ListRunsResponse} returns this
 */
proto.autokitteh.langsvc.ListRunsResponse.prototype.clearStatesMap = function() {
  this.getStatesMap().clear();
  return this;};


goog.object.extend(exports, proto.autokitteh.langsvc);
