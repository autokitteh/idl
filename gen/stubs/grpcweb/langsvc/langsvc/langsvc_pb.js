// source: langsvc/langsvc.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var validate_validate_pb = require('../validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
var program_program_pb = require('../program/program_pb.js');
goog.object.extend(proto, program_program_pb);
goog.exportSymbol('proto.autokitteh.langsvc.CatalogLang', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.CompileModuleRequest', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.CompileModuleResponse', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.Cycle', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.Dependencies', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.GetModuleDependenciesRequest', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.GetModuleDependenciesResponse', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.ListLangsRequest', null, global);
goog.exportSymbol('proto.autokitteh.langsvc.ListLangsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.Cycle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.autokitteh.langsvc.Cycle.repeatedFields_, null);
};
goog.inherits(proto.autokitteh.langsvc.Cycle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.Cycle.displayName = 'proto.autokitteh.langsvc.Cycle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.Dependencies = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.autokitteh.langsvc.Dependencies.repeatedFields_, null);
};
goog.inherits(proto.autokitteh.langsvc.Dependencies, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.Dependencies.displayName = 'proto.autokitteh.langsvc.Dependencies';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.GetModuleDependenciesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.GetModuleDependenciesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.GetModuleDependenciesRequest.displayName = 'proto.autokitteh.langsvc.GetModuleDependenciesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.GetModuleDependenciesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.GetModuleDependenciesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.GetModuleDependenciesResponse.displayName = 'proto.autokitteh.langsvc.GetModuleDependenciesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest.displayName = 'proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse.displayName = 'proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.CompileModuleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.autokitteh.langsvc.CompileModuleRequest.repeatedFields_, null);
};
goog.inherits(proto.autokitteh.langsvc.CompileModuleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.CompileModuleRequest.displayName = 'proto.autokitteh.langsvc.CompileModuleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.CompileModuleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.CompileModuleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.CompileModuleResponse.displayName = 'proto.autokitteh.langsvc.CompileModuleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.ListLangsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.ListLangsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.ListLangsRequest.displayName = 'proto.autokitteh.langsvc.ListLangsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.CatalogLang = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.autokitteh.langsvc.CatalogLang.repeatedFields_, null);
};
goog.inherits(proto.autokitteh.langsvc.CatalogLang, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.CatalogLang.displayName = 'proto.autokitteh.langsvc.CatalogLang';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.langsvc.ListLangsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.langsvc.ListLangsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.langsvc.ListLangsResponse.displayName = 'proto.autokitteh.langsvc.ListLangsResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.autokitteh.langsvc.Cycle.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.Cycle.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.Cycle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.Cycle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.Cycle.toObject = function(includeInstance, msg) {
  var f, obj = {
    pathsList: jspb.Message.toObjectList(msg.getPathsList(),
    program_program_pb.Path.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.Cycle}
 */
proto.autokitteh.langsvc.Cycle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.Cycle;
  return proto.autokitteh.langsvc.Cycle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.Cycle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.Cycle}
 */
proto.autokitteh.langsvc.Cycle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new program_program_pb.Path;
      reader.readMessage(value,program_program_pb.Path.deserializeBinaryFromReader);
      msg.addPaths(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.Cycle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.Cycle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.Cycle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.Cycle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPathsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      program_program_pb.Path.serializeBinaryToWriter
    );
  }
};


/**
 * repeated autokitteh.program.Path paths = 1;
 * @return {!Array<!proto.autokitteh.program.Path>}
 */
proto.autokitteh.langsvc.Cycle.prototype.getPathsList = function() {
  return /** @type{!Array<!proto.autokitteh.program.Path>} */ (
    jspb.Message.getRepeatedWrapperField(this, program_program_pb.Path, 1));
};


/**
 * @param {!Array<!proto.autokitteh.program.Path>} value
 * @return {!proto.autokitteh.langsvc.Cycle} returns this
*/
proto.autokitteh.langsvc.Cycle.prototype.setPathsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.autokitteh.program.Path=} opt_value
 * @param {number=} opt_index
 * @return {!proto.autokitteh.program.Path}
 */
proto.autokitteh.langsvc.Cycle.prototype.addPaths = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.autokitteh.program.Path, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.autokitteh.langsvc.Cycle} returns this
 */
proto.autokitteh.langsvc.Cycle.prototype.clearPathsList = function() {
  return this.setPathsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.autokitteh.langsvc.Dependencies.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.Dependencies.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.Dependencies.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.Dependencies} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.Dependencies.toObject = function(includeInstance, msg) {
  var f, obj = {
    readyList: jspb.Message.toObjectList(msg.getReadyList(),
    program_program_pb.Path.toObject, includeInstance),
    missingList: jspb.Message.toObjectList(msg.getMissingList(),
    program_program_pb.Path.toObject, includeInstance),
    cyclesList: jspb.Message.toObjectList(msg.getCyclesList(),
    proto.autokitteh.langsvc.Cycle.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.Dependencies}
 */
proto.autokitteh.langsvc.Dependencies.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.Dependencies;
  return proto.autokitteh.langsvc.Dependencies.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.Dependencies} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.Dependencies}
 */
proto.autokitteh.langsvc.Dependencies.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new program_program_pb.Path;
      reader.readMessage(value,program_program_pb.Path.deserializeBinaryFromReader);
      msg.addReady(value);
      break;
    case 2:
      var value = new program_program_pb.Path;
      reader.readMessage(value,program_program_pb.Path.deserializeBinaryFromReader);
      msg.addMissing(value);
      break;
    case 3:
      var value = new proto.autokitteh.langsvc.Cycle;
      reader.readMessage(value,proto.autokitteh.langsvc.Cycle.deserializeBinaryFromReader);
      msg.addCycles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.Dependencies.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.Dependencies.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.Dependencies} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.Dependencies.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReadyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      program_program_pb.Path.serializeBinaryToWriter
    );
  }
  f = message.getMissingList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      program_program_pb.Path.serializeBinaryToWriter
    );
  }
  f = message.getCyclesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.autokitteh.langsvc.Cycle.serializeBinaryToWriter
    );
  }
};


/**
 * repeated autokitteh.program.Path ready = 1;
 * @return {!Array<!proto.autokitteh.program.Path>}
 */
proto.autokitteh.langsvc.Dependencies.prototype.getReadyList = function() {
  return /** @type{!Array<!proto.autokitteh.program.Path>} */ (
    jspb.Message.getRepeatedWrapperField(this, program_program_pb.Path, 1));
};


/**
 * @param {!Array<!proto.autokitteh.program.Path>} value
 * @return {!proto.autokitteh.langsvc.Dependencies} returns this
*/
proto.autokitteh.langsvc.Dependencies.prototype.setReadyList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.autokitteh.program.Path=} opt_value
 * @param {number=} opt_index
 * @return {!proto.autokitteh.program.Path}
 */
proto.autokitteh.langsvc.Dependencies.prototype.addReady = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.autokitteh.program.Path, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.autokitteh.langsvc.Dependencies} returns this
 */
proto.autokitteh.langsvc.Dependencies.prototype.clearReadyList = function() {
  return this.setReadyList([]);
};


/**
 * repeated autokitteh.program.Path missing = 2;
 * @return {!Array<!proto.autokitteh.program.Path>}
 */
proto.autokitteh.langsvc.Dependencies.prototype.getMissingList = function() {
  return /** @type{!Array<!proto.autokitteh.program.Path>} */ (
    jspb.Message.getRepeatedWrapperField(this, program_program_pb.Path, 2));
};


/**
 * @param {!Array<!proto.autokitteh.program.Path>} value
 * @return {!proto.autokitteh.langsvc.Dependencies} returns this
*/
proto.autokitteh.langsvc.Dependencies.prototype.setMissingList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.autokitteh.program.Path=} opt_value
 * @param {number=} opt_index
 * @return {!proto.autokitteh.program.Path}
 */
proto.autokitteh.langsvc.Dependencies.prototype.addMissing = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.autokitteh.program.Path, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.autokitteh.langsvc.Dependencies} returns this
 */
proto.autokitteh.langsvc.Dependencies.prototype.clearMissingList = function() {
  return this.setMissingList([]);
};


/**
 * repeated Cycle cycles = 3;
 * @return {!Array<!proto.autokitteh.langsvc.Cycle>}
 */
proto.autokitteh.langsvc.Dependencies.prototype.getCyclesList = function() {
  return /** @type{!Array<!proto.autokitteh.langsvc.Cycle>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.autokitteh.langsvc.Cycle, 3));
};


/**
 * @param {!Array<!proto.autokitteh.langsvc.Cycle>} value
 * @return {!proto.autokitteh.langsvc.Dependencies} returns this
*/
proto.autokitteh.langsvc.Dependencies.prototype.setCyclesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.autokitteh.langsvc.Cycle=} opt_value
 * @param {number=} opt_index
 * @return {!proto.autokitteh.langsvc.Cycle}
 */
proto.autokitteh.langsvc.Dependencies.prototype.addCycles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.autokitteh.langsvc.Cycle, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.autokitteh.langsvc.Dependencies} returns this
 */
proto.autokitteh.langsvc.Dependencies.prototype.clearCyclesList = function() {
  return this.setCyclesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.GetModuleDependenciesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.GetModuleDependenciesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.GetModuleDependenciesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.GetModuleDependenciesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    module: (f = msg.getModule()) && program_program_pb.Module.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.GetModuleDependenciesRequest}
 */
proto.autokitteh.langsvc.GetModuleDependenciesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.GetModuleDependenciesRequest;
  return proto.autokitteh.langsvc.GetModuleDependenciesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.GetModuleDependenciesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.GetModuleDependenciesRequest}
 */
proto.autokitteh.langsvc.GetModuleDependenciesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new program_program_pb.Module;
      reader.readMessage(value,program_program_pb.Module.deserializeBinaryFromReader);
      msg.setModule(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.GetModuleDependenciesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.GetModuleDependenciesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.GetModuleDependenciesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.GetModuleDependenciesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModule();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      program_program_pb.Module.serializeBinaryToWriter
    );
  }
};


/**
 * optional autokitteh.program.Module module = 1;
 * @return {?proto.autokitteh.program.Module}
 */
proto.autokitteh.langsvc.GetModuleDependenciesRequest.prototype.getModule = function() {
  return /** @type{?proto.autokitteh.program.Module} */ (
    jspb.Message.getWrapperField(this, program_program_pb.Module, 1));
};


/**
 * @param {?proto.autokitteh.program.Module|undefined} value
 * @return {!proto.autokitteh.langsvc.GetModuleDependenciesRequest} returns this
*/
proto.autokitteh.langsvc.GetModuleDependenciesRequest.prototype.setModule = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.langsvc.GetModuleDependenciesRequest} returns this
 */
proto.autokitteh.langsvc.GetModuleDependenciesRequest.prototype.clearModule = function() {
  return this.setModule(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.langsvc.GetModuleDependenciesRequest.prototype.hasModule = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.GetModuleDependenciesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.GetModuleDependenciesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.GetModuleDependenciesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.GetModuleDependenciesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    deps: (f = msg.getDeps()) && proto.autokitteh.langsvc.Dependencies.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.GetModuleDependenciesResponse}
 */
proto.autokitteh.langsvc.GetModuleDependenciesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.GetModuleDependenciesResponse;
  return proto.autokitteh.langsvc.GetModuleDependenciesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.GetModuleDependenciesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.GetModuleDependenciesResponse}
 */
proto.autokitteh.langsvc.GetModuleDependenciesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.autokitteh.langsvc.Dependencies;
      reader.readMessage(value,proto.autokitteh.langsvc.Dependencies.deserializeBinaryFromReader);
      msg.setDeps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.GetModuleDependenciesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.GetModuleDependenciesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.GetModuleDependenciesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.GetModuleDependenciesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeps();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.autokitteh.langsvc.Dependencies.serializeBinaryToWriter
    );
  }
};


/**
 * optional Dependencies deps = 1;
 * @return {?proto.autokitteh.langsvc.Dependencies}
 */
proto.autokitteh.langsvc.GetModuleDependenciesResponse.prototype.getDeps = function() {
  return /** @type{?proto.autokitteh.langsvc.Dependencies} */ (
    jspb.Message.getWrapperField(this, proto.autokitteh.langsvc.Dependencies, 1));
};


/**
 * @param {?proto.autokitteh.langsvc.Dependencies|undefined} value
 * @return {!proto.autokitteh.langsvc.GetModuleDependenciesResponse} returns this
*/
proto.autokitteh.langsvc.GetModuleDependenciesResponse.prototype.setDeps = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.langsvc.GetModuleDependenciesResponse} returns this
 */
proto.autokitteh.langsvc.GetModuleDependenciesResponse.prototype.clearDeps = function() {
  return this.setDeps(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.langsvc.GetModuleDependenciesResponse.prototype.hasDeps = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    lang: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ver: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest}
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest;
  return proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest}
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLang(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLang();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string lang = 1;
 * @return {string}
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest.prototype.getLang = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest} returns this
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest.prototype.setLang = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ver = 2;
 * @return {string}
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest.prototype.getVer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest} returns this
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedRequest.prototype.setVer = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    supported: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse}
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse;
  return proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse}
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupported(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSupported();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool supported = 1;
 * @return {boolean}
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse.prototype.getSupported = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse} returns this
 */
proto.autokitteh.langsvc.IsCompilerVersionSupportedResponse.prototype.setSupported = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.autokitteh.langsvc.CompileModuleRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.CompileModuleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.CompileModuleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.CompileModuleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.CompileModuleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    lang: jspb.Message.getFieldWithDefault(msg, 1, ""),
    predeclsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    path: (f = msg.getPath()) && program_program_pb.Path.toObject(includeInstance, f),
    src: msg.getSrc_asB64(),
    getDeps: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.CompileModuleRequest}
 */
proto.autokitteh.langsvc.CompileModuleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.CompileModuleRequest;
  return proto.autokitteh.langsvc.CompileModuleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.CompileModuleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.CompileModuleRequest}
 */
proto.autokitteh.langsvc.CompileModuleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLang(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addPredecls(value);
      break;
    case 3:
      var value = new program_program_pb.Path;
      reader.readMessage(value,program_program_pb.Path.deserializeBinaryFromReader);
      msg.setPath(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSrc(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGetDeps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.CompileModuleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.CompileModuleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.CompileModuleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.CompileModuleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLang();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPredeclsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getPath();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      program_program_pb.Path.serializeBinaryToWriter
    );
  }
  f = message.getSrc_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getGetDeps();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string lang = 1;
 * @return {string}
 */
proto.autokitteh.langsvc.CompileModuleRequest.prototype.getLang = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.langsvc.CompileModuleRequest} returns this
 */
proto.autokitteh.langsvc.CompileModuleRequest.prototype.setLang = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string predecls = 2;
 * @return {!Array<string>}
 */
proto.autokitteh.langsvc.CompileModuleRequest.prototype.getPredeclsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.autokitteh.langsvc.CompileModuleRequest} returns this
 */
proto.autokitteh.langsvc.CompileModuleRequest.prototype.setPredeclsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.autokitteh.langsvc.CompileModuleRequest} returns this
 */
proto.autokitteh.langsvc.CompileModuleRequest.prototype.addPredecls = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.autokitteh.langsvc.CompileModuleRequest} returns this
 */
proto.autokitteh.langsvc.CompileModuleRequest.prototype.clearPredeclsList = function() {
  return this.setPredeclsList([]);
};


/**
 * optional autokitteh.program.Path path = 3;
 * @return {?proto.autokitteh.program.Path}
 */
proto.autokitteh.langsvc.CompileModuleRequest.prototype.getPath = function() {
  return /** @type{?proto.autokitteh.program.Path} */ (
    jspb.Message.getWrapperField(this, program_program_pb.Path, 3));
};


/**
 * @param {?proto.autokitteh.program.Path|undefined} value
 * @return {!proto.autokitteh.langsvc.CompileModuleRequest} returns this
*/
proto.autokitteh.langsvc.CompileModuleRequest.prototype.setPath = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.langsvc.CompileModuleRequest} returns this
 */
proto.autokitteh.langsvc.CompileModuleRequest.prototype.clearPath = function() {
  return this.setPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.langsvc.CompileModuleRequest.prototype.hasPath = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes src = 4;
 * @return {string}
 */
proto.autokitteh.langsvc.CompileModuleRequest.prototype.getSrc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes src = 4;
 * This is a type-conversion wrapper around `getSrc()`
 * @return {string}
 */
proto.autokitteh.langsvc.CompileModuleRequest.prototype.getSrc_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSrc()));
};


/**
 * optional bytes src = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSrc()`
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.CompileModuleRequest.prototype.getSrc_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSrc()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.autokitteh.langsvc.CompileModuleRequest} returns this
 */
proto.autokitteh.langsvc.CompileModuleRequest.prototype.setSrc = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bool get_deps = 6;
 * @return {boolean}
 */
proto.autokitteh.langsvc.CompileModuleRequest.prototype.getGetDeps = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.autokitteh.langsvc.CompileModuleRequest} returns this
 */
proto.autokitteh.langsvc.CompileModuleRequest.prototype.setGetDeps = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.CompileModuleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.CompileModuleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.CompileModuleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.CompileModuleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    module: (f = msg.getModule()) && program_program_pb.Module.toObject(includeInstance, f),
    deps: (f = msg.getDeps()) && proto.autokitteh.langsvc.Dependencies.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.CompileModuleResponse}
 */
proto.autokitteh.langsvc.CompileModuleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.CompileModuleResponse;
  return proto.autokitteh.langsvc.CompileModuleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.CompileModuleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.CompileModuleResponse}
 */
proto.autokitteh.langsvc.CompileModuleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new program_program_pb.Module;
      reader.readMessage(value,program_program_pb.Module.deserializeBinaryFromReader);
      msg.setModule(value);
      break;
    case 2:
      var value = new proto.autokitteh.langsvc.Dependencies;
      reader.readMessage(value,proto.autokitteh.langsvc.Dependencies.deserializeBinaryFromReader);
      msg.setDeps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.CompileModuleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.CompileModuleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.CompileModuleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.CompileModuleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModule();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      program_program_pb.Module.serializeBinaryToWriter
    );
  }
  f = message.getDeps();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.autokitteh.langsvc.Dependencies.serializeBinaryToWriter
    );
  }
};


/**
 * optional autokitteh.program.Module module = 1;
 * @return {?proto.autokitteh.program.Module}
 */
proto.autokitteh.langsvc.CompileModuleResponse.prototype.getModule = function() {
  return /** @type{?proto.autokitteh.program.Module} */ (
    jspb.Message.getWrapperField(this, program_program_pb.Module, 1));
};


/**
 * @param {?proto.autokitteh.program.Module|undefined} value
 * @return {!proto.autokitteh.langsvc.CompileModuleResponse} returns this
*/
proto.autokitteh.langsvc.CompileModuleResponse.prototype.setModule = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.langsvc.CompileModuleResponse} returns this
 */
proto.autokitteh.langsvc.CompileModuleResponse.prototype.clearModule = function() {
  return this.setModule(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.langsvc.CompileModuleResponse.prototype.hasModule = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Dependencies deps = 2;
 * @return {?proto.autokitteh.langsvc.Dependencies}
 */
proto.autokitteh.langsvc.CompileModuleResponse.prototype.getDeps = function() {
  return /** @type{?proto.autokitteh.langsvc.Dependencies} */ (
    jspb.Message.getWrapperField(this, proto.autokitteh.langsvc.Dependencies, 2));
};


/**
 * @param {?proto.autokitteh.langsvc.Dependencies|undefined} value
 * @return {!proto.autokitteh.langsvc.CompileModuleResponse} returns this
*/
proto.autokitteh.langsvc.CompileModuleResponse.prototype.setDeps = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.langsvc.CompileModuleResponse} returns this
 */
proto.autokitteh.langsvc.CompileModuleResponse.prototype.clearDeps = function() {
  return this.setDeps(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.langsvc.CompileModuleResponse.prototype.hasDeps = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.ListLangsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.ListLangsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.ListLangsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.ListLangsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.ListLangsRequest}
 */
proto.autokitteh.langsvc.ListLangsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.ListLangsRequest;
  return proto.autokitteh.langsvc.ListLangsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.ListLangsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.ListLangsRequest}
 */
proto.autokitteh.langsvc.ListLangsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.ListLangsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.ListLangsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.ListLangsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.ListLangsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.autokitteh.langsvc.CatalogLang.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.CatalogLang.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.CatalogLang.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.CatalogLang} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.CatalogLang.toObject = function(includeInstance, msg) {
  var f, obj = {
    extsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.CatalogLang}
 */
proto.autokitteh.langsvc.CatalogLang.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.CatalogLang;
  return proto.autokitteh.langsvc.CatalogLang.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.CatalogLang} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.CatalogLang}
 */
proto.autokitteh.langsvc.CatalogLang.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addExts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.CatalogLang.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.CatalogLang.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.CatalogLang} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.CatalogLang.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExtsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string exts = 1;
 * @return {!Array<string>}
 */
proto.autokitteh.langsvc.CatalogLang.prototype.getExtsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.autokitteh.langsvc.CatalogLang} returns this
 */
proto.autokitteh.langsvc.CatalogLang.prototype.setExtsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.autokitteh.langsvc.CatalogLang} returns this
 */
proto.autokitteh.langsvc.CatalogLang.prototype.addExts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.autokitteh.langsvc.CatalogLang} returns this
 */
proto.autokitteh.langsvc.CatalogLang.prototype.clearExtsList = function() {
  return this.setExtsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.langsvc.ListLangsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.langsvc.ListLangsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.langsvc.ListLangsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.ListLangsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    langsMap: (f = msg.getLangsMap()) ? f.toObject(includeInstance, proto.autokitteh.langsvc.CatalogLang.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.langsvc.ListLangsResponse}
 */
proto.autokitteh.langsvc.ListLangsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.langsvc.ListLangsResponse;
  return proto.autokitteh.langsvc.ListLangsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.langsvc.ListLangsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.langsvc.ListLangsResponse}
 */
proto.autokitteh.langsvc.ListLangsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getLangsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.autokitteh.langsvc.CatalogLang.deserializeBinaryFromReader, "", new proto.autokitteh.langsvc.CatalogLang());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.langsvc.ListLangsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.langsvc.ListLangsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.langsvc.ListLangsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.langsvc.ListLangsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLangsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.autokitteh.langsvc.CatalogLang.serializeBinaryToWriter);
  }
};


/**
 * map<string, CatalogLang> langs = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.autokitteh.langsvc.CatalogLang>}
 */
proto.autokitteh.langsvc.ListLangsResponse.prototype.getLangsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.autokitteh.langsvc.CatalogLang>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.autokitteh.langsvc.CatalogLang));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.autokitteh.langsvc.ListLangsResponse} returns this
 */
proto.autokitteh.langsvc.ListLangsResponse.prototype.clearLangsMap = function() {
  this.getLangsMap().clear();
  return this;};


goog.object.extend(exports, proto.autokitteh.langsvc);
