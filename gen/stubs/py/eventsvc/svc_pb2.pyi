"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import event.event_pb2
import event.event_state_pb2
import event.project_state_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions
import values.values_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class IngestEventRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class DataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> values.values_pb2.Value: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[values.values_pb2.Value] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class MemoEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    SRC_ID_FIELD_NUMBER: builtins.int
    ASSOCIATION_TOKEN_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    ORIGINAL_ID_FIELD_NUMBER: builtins.int
    MEMO_FIELD_NUMBER: builtins.int
    src_id: typing.Text
    association_token: typing.Text
    type: typing.Text
    @property
    def data(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, values.values_pb2.Value]: ...
    original_id: typing.Text
    @property
    def memo(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """for caller use only - not used in event processing."""
        pass
    def __init__(self,
        *,
        src_id: typing.Text = ...,
        association_token: typing.Text = ...,
        type: typing.Text = ...,
        data: typing.Optional[typing.Mapping[typing.Text, values.values_pb2.Value]] = ...,
        original_id: typing.Text = ...,
        memo: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["association_token",b"association_token","data",b"data","memo",b"memo","original_id",b"original_id","src_id",b"src_id","type",b"type"]) -> None: ...
global___IngestEventRequest = IngestEventRequest

class IngestEventResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    id: typing.Text
    def __init__(self,
        *,
        id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id"]) -> None: ...
global___IngestEventResponse = IngestEventResponse

class GetEventRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    id: typing.Text
    def __init__(self,
        *,
        id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id"]) -> None: ...
global___GetEventRequest = GetEventRequest

class GetEventResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EVENT_FIELD_NUMBER: builtins.int
    @property
    def event(self) -> event.event_pb2.Event: ...
    def __init__(self,
        *,
        event: typing.Optional[event.event_pb2.Event] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["event",b"event"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["event",b"event"]) -> None: ...
global___GetEventResponse = GetEventResponse

class GetEventStateRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    id: typing.Text
    def __init__(self,
        *,
        id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id"]) -> None: ...
global___GetEventStateRequest = GetEventStateRequest

class GetEventStateResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOG_FIELD_NUMBER: builtins.int
    @property
    def log(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[event.event_state_pb2.EventStateRecord]: ...
    def __init__(self,
        *,
        log: typing.Optional[typing.Iterable[event.event_state_pb2.EventStateRecord]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["log",b"log"]) -> None: ...
global___GetEventStateResponse = GetEventStateResponse

class GetEventStateForProjectRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    id: typing.Text
    project_id: typing.Text
    def __init__(self,
        *,
        id: typing.Text = ...,
        project_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","project_id",b"project_id"]) -> None: ...
global___GetEventStateForProjectRequest = GetEventStateForProjectRequest

class GetEventStateForProjectResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOG_FIELD_NUMBER: builtins.int
    @property
    def log(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[event.project_state_pb2.ProjectEventStateRecord]: ...
    def __init__(self,
        *,
        log: typing.Optional[typing.Iterable[event.project_state_pb2.ProjectEventStateRecord]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["log",b"log"]) -> None: ...
global___GetEventStateForProjectResponse = GetEventStateForProjectResponse

class UpdateEventStateRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    id: typing.Text
    @property
    def state(self) -> event.event_state_pb2.EventState: ...
    def __init__(self,
        *,
        id: typing.Text = ...,
        state: typing.Optional[event.event_state_pb2.EventState] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["state",b"state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","state",b"state"]) -> None: ...
global___UpdateEventStateRequest = UpdateEventStateRequest

class UpdateEventStateResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(self,
        ) -> None: ...
global___UpdateEventStateResponse = UpdateEventStateResponse

class UpdateEventStateForProjectRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    id: typing.Text
    project_id: typing.Text
    @property
    def state(self) -> event.project_state_pb2.ProjectEventState: ...
    def __init__(self,
        *,
        id: typing.Text = ...,
        project_id: typing.Text = ...,
        state: typing.Optional[event.project_state_pb2.ProjectEventState] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["state",b"state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","project_id",b"project_id","state",b"state"]) -> None: ...
global___UpdateEventStateForProjectRequest = UpdateEventStateForProjectRequest

class UpdateEventStateForProjectResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(self,
        ) -> None: ...
global___UpdateEventStateForProjectResponse = UpdateEventStateForProjectResponse

class ListEventsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PROJECT_ID_FIELD_NUMBER: builtins.int
    OFS_FIELD_NUMBER: builtins.int
    LEN_FIELD_NUMBER: builtins.int
    project_id: typing.Text
    """if not set, all events."""

    ofs: builtins.int
    len: builtins.int
    def __init__(self,
        *,
        project_id: typing.Text = ...,
        ofs: builtins.int = ...,
        len: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["len",b"len","ofs",b"ofs","project_id",b"project_id"]) -> None: ...
global___ListEventsRequest = ListEventsRequest

class ListEventRecord(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EVENT_FIELD_NUMBER: builtins.int
    STATES_FIELD_NUMBER: builtins.int
    @property
    def event(self) -> event.event_pb2.Event: ...
    @property
    def states(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[event.event_state_pb2.EventStateRecord]: ...
    def __init__(self,
        *,
        event: typing.Optional[event.event_pb2.Event] = ...,
        states: typing.Optional[typing.Iterable[event.event_state_pb2.EventStateRecord]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["event",b"event"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["event",b"event","states",b"states"]) -> None: ...
global___ListEventRecord = ListEventRecord

class ListEventsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RECORDS_FIELD_NUMBER: builtins.int
    @property
    def records(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ListEventRecord]: ...
    def __init__(self,
        *,
        records: typing.Optional[typing.Iterable[global___ListEventRecord]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["records",b"records"]) -> None: ...
global___ListEventsResponse = ListEventsResponse

class GetProjectWaitingEventsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PROJECT_ID_FIELD_NUMBER: builtins.int
    project_id: typing.Text
    """if not set, all events."""

    def __init__(self,
        *,
        project_id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project_id",b"project_id"]) -> None: ...
global___GetProjectWaitingEventsRequest = GetProjectWaitingEventsRequest

class GetProjectWaitingEventsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EVENT_IDS_FIELD_NUMBER: builtins.int
    @property
    def event_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        event_ids: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["event_ids",b"event_ids"]) -> None: ...
global___GetProjectWaitingEventsResponse = GetProjectWaitingEventsResponse
