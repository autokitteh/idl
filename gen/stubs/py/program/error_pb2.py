# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: program/error.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from program import program_pb2 as program_dot_program__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13program/error.proto\x12\x12\x61utokitteh.program\x1a\x15program/program.proto\"D\n\tCallFrame\x12\x0c\n\x04name\x18\x01 \x01(\t\x12)\n\x03loc\x18\x02 \x01(\x0b\x32\x1c.autokitteh.program.Location\"}\n\x05\x45rror\x12\x0b\n\x03msg\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x30\n\tcallstack\x18\x03 \x03(\x0b\x32\x1d.autokitteh.program.CallFrame\x12\'\n\x04next\x18\x04 \x01(\x0b\x32\x19.autokitteh.program.ErrorB\x1fZ\x1dgo.autokitteh.dev/idl/programb\x06proto3')



_CALLFRAME = DESCRIPTOR.message_types_by_name['CallFrame']
_ERROR = DESCRIPTOR.message_types_by_name['Error']
CallFrame = _reflection.GeneratedProtocolMessageType('CallFrame', (_message.Message,), {
  'DESCRIPTOR' : _CALLFRAME,
  '__module__' : 'program.error_pb2'
  # @@protoc_insertion_point(class_scope:autokitteh.program.CallFrame)
  })
_sym_db.RegisterMessage(CallFrame)

Error = _reflection.GeneratedProtocolMessageType('Error', (_message.Message,), {
  'DESCRIPTOR' : _ERROR,
  '__module__' : 'program.error_pb2'
  # @@protoc_insertion_point(class_scope:autokitteh.program.Error)
  })
_sym_db.RegisterMessage(Error)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\035go.autokitteh.dev/idl/program'
  _CALLFRAME._serialized_start=66
  _CALLFRAME._serialized_end=134
  _ERROR._serialized_start=136
  _ERROR._serialized_end=261
# @@protoc_insertion_point(module_scope)
