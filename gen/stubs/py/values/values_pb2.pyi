"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _r_None(google.protobuf.message.Message):
    """These types are heavily inspired by Starlark's values. That said, there is
    no expectation/requirement for these to be the same in the future.

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(self,
        ) -> None: ...
global____r_None = _r_None

class String(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    V_FIELD_NUMBER: builtins.int
    v: typing.Text
    def __init__(self,
        *,
        v: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["v",b"v"]) -> None: ...
global___String = String

class Integer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    V_FIELD_NUMBER: builtins.int
    v: builtins.int
    def __init__(self,
        *,
        v: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["v",b"v"]) -> None: ...
global___Integer = Integer

class Float(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    V_FIELD_NUMBER: builtins.int
    v: builtins.float
    def __init__(self,
        *,
        v: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["v",b"v"]) -> None: ...
global___Float = Float

class Boolean(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    V_FIELD_NUMBER: builtins.int
    v: builtins.bool
    def __init__(self,
        *,
        v: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["v",b"v"]) -> None: ...
global___Boolean = Boolean

class List(google.protobuf.message.Message):
    """For Starlark, will be used for Tuple in return values."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VS_FIELD_NUMBER: builtins.int
    @property
    def vs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Value]: ...
    def __init__(self,
        *,
        vs: typing.Optional[typing.Iterable[global___Value]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["vs",b"vs"]) -> None: ...
global___List = List

class Set(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VS_FIELD_NUMBER: builtins.int
    @property
    def vs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Value]: ...
    def __init__(self,
        *,
        vs: typing.Optional[typing.Iterable[global___Value]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["vs",b"vs"]) -> None: ...
global___Set = Set

class DictItem(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    K_FIELD_NUMBER: builtins.int
    V_FIELD_NUMBER: builtins.int
    @property
    def k(self) -> global___Value: ...
    @property
    def v(self) -> global___Value: ...
    def __init__(self,
        *,
        k: typing.Optional[global___Value] = ...,
        v: typing.Optional[global___Value] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["k",b"k","v",b"v"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["k",b"k","v",b"v"]) -> None: ...
global___DictItem = DictItem

class Dict(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ITEMS_FIELD_NUMBER: builtins.int
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DictItem]: ...
    def __init__(self,
        *,
        items: typing.Optional[typing.Iterable[global___DictItem]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["items",b"items"]) -> None: ...
global___Dict = Dict

class Bytes(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    V_FIELD_NUMBER: builtins.int
    v: builtins.bytes
    def __init__(self,
        *,
        v: builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["v",b"v"]) -> None: ...
global___Bytes = Bytes

class Time(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    T_FIELD_NUMBER: builtins.int
    @property
    def t(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(self,
        *,
        t: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["t",b"t"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["t",b"t"]) -> None: ...
global___Time = Time

class Duration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    D_FIELD_NUMBER: builtins.int
    @property
    def d(self) -> google.protobuf.duration_pb2.Duration: ...
    def __init__(self,
        *,
        d: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["d",b"d"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["d",b"d"]) -> None: ...
global___Duration = Duration

class Call(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class FlagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.bool
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    ISSUER_FIELD_NUMBER: builtins.int
    FLAGS_FIELD_NUMBER: builtins.int
    id: typing.Text
    name: typing.Text
    issuer: typing.Text
    """plugin id for plugins"""

    @property
    def flags(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.bool]: ...
    def __init__(self,
        *,
        id: typing.Text = ...,
        name: typing.Text = ...,
        issuer: typing.Text = ...,
        flags: typing.Optional[typing.Mapping[typing.Text, builtins.bool]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["flags",b"flags","id",b"id","issuer",b"issuer","name",b"name"]) -> None: ...
global___Call = Call

class Struct(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class FieldsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___Value: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___Value] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    CTOR_FIELD_NUMBER: builtins.int
    FIELDS_FIELD_NUMBER: builtins.int
    @property
    def ctor(self) -> global___Value: ...
    @property
    def fields(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___Value]: ...
    def __init__(self,
        *,
        ctor: typing.Optional[global___Value] = ...,
        fields: typing.Optional[typing.Mapping[typing.Text, global___Value]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["ctor",b"ctor"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ctor",b"ctor","fields",b"fields"]) -> None: ...
global___Struct = Struct

class Module(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class MembersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___Value: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___Value] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    MEMBERS_FIELD_NUMBER: builtins.int
    name: typing.Text
    @property
    def members(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___Value]: ...
    def __init__(self,
        *,
        name: typing.Text = ...,
        members: typing.Optional[typing.Mapping[typing.Text, global___Value]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["members",b"members","name",b"name"]) -> None: ...
global___Module = Module

class Symbol(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text
    def __init__(self,
        *,
        name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___Symbol = Symbol

class FunctionSignature(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    DOC_FIELD_NUMBER: builtins.int
    N_ARGS_FIELD_NUMBER: builtins.int
    N_KWONLYARGS_FIELD_NUMBER: builtins.int
    ARGS_NAMES_FIELD_NUMBER: builtins.int
    HAS_VARARGS_FIELD_NUMBER: builtins.int
    HAS_KWARGS_FIELD_NUMBER: builtins.int
    name: typing.Text
    doc: typing.Text
    n_args: builtins.int
    n_kwonlyargs: builtins.int
    @property
    def args_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """see https://github.com/google/starlark-go/blob/master/starlark/value.go#L703."""
        pass
    has_varargs: builtins.bool
    has_kwargs: builtins.bool
    def __init__(self,
        *,
        name: typing.Text = ...,
        doc: typing.Text = ...,
        n_args: builtins.int = ...,
        n_kwonlyargs: builtins.int = ...,
        args_names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        has_varargs: builtins.bool = ...,
        has_kwargs: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["args_names",b"args_names","doc",b"doc","has_kwargs",b"has_kwargs","has_varargs",b"has_varargs","n_args",b"n_args","n_kwonlyargs",b"n_kwonlyargs","name",b"name"]) -> None: ...
global___FunctionSignature = FunctionSignature

class Function(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FUNC_ID_FIELD_NUMBER: builtins.int
    LANG_FIELD_NUMBER: builtins.int
    SCOPE_FIELD_NUMBER: builtins.int
    SIG_FIELD_NUMBER: builtins.int
    func_id: typing.Text
    lang: typing.Text
    scope: typing.Text
    @property
    def sig(self) -> global___FunctionSignature:
        """optional - not necessary."""
        pass
    def __init__(self,
        *,
        func_id: typing.Text = ...,
        lang: typing.Text = ...,
        scope: typing.Text = ...,
        sig: typing.Optional[global___FunctionSignature] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["sig",b"sig"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["func_id",b"func_id","lang",b"lang","scope",b"scope","sig",b"sig"]) -> None: ...
global___Function = Function

class Value(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NONE_FIELD_NUMBER: builtins.int
    STRING_FIELD_NUMBER: builtins.int
    INTEGER_FIELD_NUMBER: builtins.int
    BOOLEAN_FIELD_NUMBER: builtins.int
    LIST_FIELD_NUMBER: builtins.int
    DICT_FIELD_NUMBER: builtins.int
    FLOAT_FIELD_NUMBER: builtins.int
    SET_FIELD_NUMBER: builtins.int
    BYTES_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    SYMBOL_FIELD_NUMBER: builtins.int
    STRUCT_FIELD_NUMBER: builtins.int
    MODULE_FIELD_NUMBER: builtins.int
    FUNCTION_FIELD_NUMBER: builtins.int
    CALL_FIELD_NUMBER: builtins.int
    @property
    def none(self) -> global____r_None: ...
    @property
    def string(self) -> global___String: ...
    @property
    def integer(self) -> global___Integer: ...
    @property
    def boolean(self) -> global___Boolean: ...
    @property
    def list(self) -> global___List: ...
    @property
    def dict(self) -> global___Dict: ...
    @property
    def float(self) -> global___Float: ...
    @property
    def set(self) -> global___Set: ...
    @property
    def bytes(self) -> global___Bytes: ...
    @property
    def time(self) -> global___Time: ...
    @property
    def duration(self) -> global___Duration: ...
    @property
    def symbol(self) -> global___Symbol: ...
    @property
    def struct(self) -> global___Struct: ...
    @property
    def module(self) -> global___Module: ...
    @property
    def function(self) -> global___Function: ...
    @property
    def call(self) -> global___Call: ...
    def __init__(self,
        *,
        none: typing.Optional[global____r_None] = ...,
        string: typing.Optional[global___String] = ...,
        integer: typing.Optional[global___Integer] = ...,
        boolean: typing.Optional[global___Boolean] = ...,
        list: typing.Optional[global___List] = ...,
        dict: typing.Optional[global___Dict] = ...,
        float: typing.Optional[global___Float] = ...,
        set: typing.Optional[global___Set] = ...,
        bytes: typing.Optional[global___Bytes] = ...,
        time: typing.Optional[global___Time] = ...,
        duration: typing.Optional[global___Duration] = ...,
        symbol: typing.Optional[global___Symbol] = ...,
        struct: typing.Optional[global___Struct] = ...,
        module: typing.Optional[global___Module] = ...,
        function: typing.Optional[global___Function] = ...,
        call: typing.Optional[global___Call] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["boolean",b"boolean","bytes",b"bytes","call",b"call","dict",b"dict","duration",b"duration","float",b"float","function",b"function","integer",b"integer","list",b"list","module",b"module","none",b"none","set",b"set","string",b"string","struct",b"struct","symbol",b"symbol","time",b"time","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["boolean",b"boolean","bytes",b"bytes","call",b"call","dict",b"dict","duration",b"duration","float",b"float","function",b"function","integer",b"integer","list",b"list","module",b"module","none",b"none","set",b"set","string",b"string","struct",b"struct","symbol",b"symbol","time",b"time","type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["type",b"type"]) -> typing.Optional[typing_extensions.Literal["none","string","integer","boolean","list","dict","float","set","bytes","time","duration","symbol","struct","module","function","call"]]: ...
global___Value = Value
