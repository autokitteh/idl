"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class EventSourceSettings(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ENABLED_FIELD_NUMBER: builtins.int
    TYPES_FIELD_NUMBER: builtins.int
    enabled: builtins.bool
    @property
    def types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """emitted event types."""
        pass
    def __init__(self,
        *,
        enabled: builtins.bool = ...,
        types: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled","types",b"types"]) -> None: ...
global___EventSourceSettings = EventSourceSettings

class EventSource(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    SETTINGS_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    UPDATED_AT_FIELD_NUMBER: builtins.int
    id: typing.Text
    @property
    def settings(self) -> global___EventSourceSettings: ...
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def updated_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(self,
        *,
        id: typing.Text = ...,
        settings: typing.Optional[global___EventSourceSettings] = ...,
        created_at: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        updated_at: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["created_at",b"created_at","settings",b"settings","updated_at",b"updated_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["created_at",b"created_at","id",b"id","settings",b"settings","updated_at",b"updated_at"]) -> None: ...
global___EventSource = EventSource

class EventSourceProjectBindingSettings(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool
    def __init__(self,
        *,
        enabled: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___EventSourceProjectBindingSettings = EventSourceProjectBindingSettings

class EventSourceProjectBinding(google.protobuf.message.Message):
    """Need to negotiate with event source to determine if eligible to receive events.
    Essentially this should be carefully managed by the system and not the user
    to prevent unwanted projects getting events.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SRC_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    ASSOCIATION_TOKEN_FIELD_NUMBER: builtins.int
    SOURCE_CONFIG_FIELD_NUMBER: builtins.int
    APPROVED_FIELD_NUMBER: builtins.int
    SETTINGS_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    UPDATED_AT_FIELD_NUMBER: builtins.int
    src_id: typing.Text
    project_id: typing.Text
    name: typing.Text
    """might not be set if not approved."""

    association_token: typing.Text
    """"multicast group" set by source."""

    source_config: typing.Text
    """                  set by source."""

    approved: builtins.bool
    @property
    def settings(self) -> global___EventSourceProjectBindingSettings: ...
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def updated_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(self,
        *,
        src_id: typing.Text = ...,
        project_id: typing.Text = ...,
        name: typing.Text = ...,
        association_token: typing.Text = ...,
        source_config: typing.Text = ...,
        approved: builtins.bool = ...,
        settings: typing.Optional[global___EventSourceProjectBindingSettings] = ...,
        created_at: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        updated_at: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["created_at",b"created_at","settings",b"settings","updated_at",b"updated_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["approved",b"approved","association_token",b"association_token","created_at",b"created_at","name",b"name","project_id",b"project_id","settings",b"settings","source_config",b"source_config","src_id",b"src_id","updated_at",b"updated_at"]) -> None: ...
global___EventSourceProjectBinding = EventSourceProjectBinding
