# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from projectsvc import svc_pb2 as projectsvc_dot_svc__pb2


class ProjectsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateProject = channel.unary_unary(
                '/autokitteh.projectsvc.Projects/CreateProject',
                request_serializer=projectsvc_dot_svc__pb2.CreateProjectRequest.SerializeToString,
                response_deserializer=projectsvc_dot_svc__pb2.CreateProjectResponse.FromString,
                )
        self.UpdateProject = channel.unary_unary(
                '/autokitteh.projectsvc.Projects/UpdateProject',
                request_serializer=projectsvc_dot_svc__pb2.UpdateProjectRequest.SerializeToString,
                response_deserializer=projectsvc_dot_svc__pb2.UpdateProjectResponse.FromString,
                )
        self.GetProject = channel.unary_unary(
                '/autokitteh.projectsvc.Projects/GetProject',
                request_serializer=projectsvc_dot_svc__pb2.GetProjectRequest.SerializeToString,
                response_deserializer=projectsvc_dot_svc__pb2.GetProjectResponse.FromString,
                )
        self.GetProjects = channel.unary_unary(
                '/autokitteh.projectsvc.Projects/GetProjects',
                request_serializer=projectsvc_dot_svc__pb2.GetProjectsRequest.SerializeToString,
                response_deserializer=projectsvc_dot_svc__pb2.GetProjectsResponse.FromString,
                )


class ProjectsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProjects(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProjectsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateProject': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProject,
                    request_deserializer=projectsvc_dot_svc__pb2.CreateProjectRequest.FromString,
                    response_serializer=projectsvc_dot_svc__pb2.CreateProjectResponse.SerializeToString,
            ),
            'UpdateProject': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProject,
                    request_deserializer=projectsvc_dot_svc__pb2.UpdateProjectRequest.FromString,
                    response_serializer=projectsvc_dot_svc__pb2.UpdateProjectResponse.SerializeToString,
            ),
            'GetProject': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProject,
                    request_deserializer=projectsvc_dot_svc__pb2.GetProjectRequest.FromString,
                    response_serializer=projectsvc_dot_svc__pb2.GetProjectResponse.SerializeToString,
            ),
            'GetProjects': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProjects,
                    request_deserializer=projectsvc_dot_svc__pb2.GetProjectsRequest.FromString,
                    response_serializer=projectsvc_dot_svc__pb2.GetProjectsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'autokitteh.projectsvc.Projects', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Projects(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/autokitteh.projectsvc.Projects/CreateProject',
            projectsvc_dot_svc__pb2.CreateProjectRequest.SerializeToString,
            projectsvc_dot_svc__pb2.CreateProjectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/autokitteh.projectsvc.Projects/UpdateProject',
            projectsvc_dot_svc__pb2.UpdateProjectRequest.SerializeToString,
            projectsvc_dot_svc__pb2.UpdateProjectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/autokitteh.projectsvc.Projects/GetProject',
            projectsvc_dot_svc__pb2.GetProjectRequest.SerializeToString,
            projectsvc_dot_svc__pb2.GetProjectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/autokitteh.projectsvc.Projects/GetProjects',
            projectsvc_dot_svc__pb2.GetProjectsRequest.SerializeToString,
            projectsvc_dot_svc__pb2.GetProjectsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
