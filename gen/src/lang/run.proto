syntax = "proto3";

package autokitteh.lang;

option go_package = "go.autokitteh.dev/idl/lang";

import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

import "program/error.proto";
import "program/program.proto";
import "values/values.proto";


message RunStateLogRecord {
  google.protobuf.Timestamp t      = 1;
  RunState                  state  = 2 [(validate.rules).message.required = true];
  program.Path              source = 3; // set only by akd for ui use.
}

message RunSummary {
  repeated RunStateLogRecord log    = 1 [(validate.rules).repeated.items.message.required = true];
  repeated string            prints = 2;
}

message RunState {
  oneof type {
    option (validate.required) = true;

    RunningRunState   running       = 1;
    CallWaitRunState  call          = 2; // waiting for callback response.
    LoadWaitRunState  load          = 3; // waiting for load response.
    CompletedRunState completed     = 4; // successfuly, otherwise error.
    CanceledRunState  canceled      = 5;
    ErrorRunState     error         = 6;

    // These are not a states, just logs of events that happened for the record.
    PrintRunUpdate          print         = 20; // sent to client.
    CallReturnedRunUpdate   callret       = 21; // not sent to client.
    LoadReturnedRunUpdate   loadret       = 22; // not sent to client.

    // Generated only in a client.
    ClientErrorRunState client_error = 30;
  }
}

message RunningRunState {}

message CallWaitRunState {
  values.Value              call        = 1 [(validate.rules).message.required = true];
  repeated values.Value     args        = 2 [(validate.rules).repeated.items.message.required = true];
  map<string, values.Value> kws         = 3 [(validate.rules).map={no_sparse: true, keys:{string:{pattern: "^[a-zA-Z_][a-zA-Z0-9_]*$"}}}];
  RunSummary                run_summary = 4;
}

message LoadWaitRunState {
  program.Path path = 1 [(validate.rules).message.required = true ];
}

message CompletedRunState {
  map<string, values.Value> vals = 1 [(validate.rules).map={no_sparse: true, keys:{string:{pattern: "^[a-zA-Z_][a-zA-Z0-9_]*$"}}}];
}

message CanceledRunState {
  string                     reason    = 1;
  repeated program.CallFrame callstack = 2;
}

message ErrorRunState {
  program.Error error   = 1;
}

message PrintRunUpdate {
  string text = 1;
}

message CallReturnedRunUpdate {
  program.Error         error  = 1;
  values.Value          retval = 2;
}

message LoadReturnedRunUpdate {
  program.Error             error       = 1;
  RunSummary                run_summary = 2;
  map<string, values.Value> vals        = 3 [(validate.rules).map={no_sparse: true, keys:{string:{pattern: "^[a-zA-Z_][a-zA-Z0-9_]*$"}}}];
}

message ClientErrorRunState {
  string error = 1;
}
