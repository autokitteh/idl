syntax = "proto3";

package autokitteh.eventsrc;

option go_package = "go.autokitteh.dev/idl/eventsrc";

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";


message EventSourceSettings {
  bool            enabled = 1;
  repeated string types   = 2; // emitted event types.

  // TODO: callback for eventsrc events: added, removed, etc.

  // TODO: auth from eventsrc.
}

message EventSource {
  string id = 1 [(validate.rules).string.pattern = "^[a-zA-Z][0-9a-zA-Z_-]+\\.[a-zA-Z][0-9a-zA-Z_-]+$"];

  EventSourceSettings settings = 3;

  google.protobuf.Timestamp created_at = 100;
  google.protobuf.Timestamp updated_at = 101;
}

message EventSourceProjectBindingSettings {
  bool enabled = 1;
}

// Need to negotiate with event source to determine if eligible to receive events.
// Essentially this should be carefully managed by the system and not the user
// to prevent unwanted projects getting events.
message EventSourceProjectBinding {
  string src_id            = 1 [(validate.rules).string.pattern = "^[a-zA-Z][0-9a-zA-Z_-]+\\.[a-zA-Z][0-9a-zA-Z_-]+$"];
  string project_id        = 2 [(validate.rules).string.pattern = "^[a-zA-Z][0-9a-zA-Z_-]+\\.[a-zA-Z0-9_-]+$"];
  string name              = 3 [(validate.rules).string = {ignore_empty:true, pattern: "^[a-zA-Z_][a-zA-Z0-9_]*$" }]; // might not be set if not approved.
  string association_token = 4; // "multicast group" set by source.
  string source_config     = 5; //                   set by source.
  bool   approved          = 6;

  EventSourceProjectBindingSettings settings = 10;

  google.protobuf.Timestamp created_at = 100;
  google.protobuf.Timestamp updated_at = 101;
}
