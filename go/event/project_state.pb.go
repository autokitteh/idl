// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: event/project_state.proto

package event

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	lang "go.autokitteh.dev/idl/go/lang"
	program "go.autokitteh.dev/idl/go/program"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProjectEventStateRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	T     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=t,proto3" json:"t,omitempty"`
	State *ProjectEventState     `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *ProjectEventStateRecord) Reset() {
	*x = ProjectEventStateRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_project_state_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectEventStateRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectEventStateRecord) ProtoMessage() {}

func (x *ProjectEventStateRecord) ProtoReflect() protoreflect.Message {
	mi := &file_event_project_state_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectEventStateRecord.ProtoReflect.Descriptor instead.
func (*ProjectEventStateRecord) Descriptor() ([]byte, []int) {
	return file_event_project_state_proto_rawDescGZIP(), []int{0}
}

func (x *ProjectEventStateRecord) GetT() *timestamppb.Timestamp {
	if x != nil {
		return x.T
	}
	return nil
}

func (x *ProjectEventStateRecord) GetState() *ProjectEventState {
	if x != nil {
		return x.State
	}
	return nil
}

type ProjectEventState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*ProjectEventState_Error
	//	*ProjectEventState_Ignored
	//	*ProjectEventState_Pending
	//	*ProjectEventState_Loading
	//	*ProjectEventState_Loaded
	//	*ProjectEventState_Running
	//	*ProjectEventState_Waiting
	//	*ProjectEventState_Completed
	Type isProjectEventState_Type `protobuf_oneof:"type"`
}

func (x *ProjectEventState) Reset() {
	*x = ProjectEventState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_project_state_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectEventState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectEventState) ProtoMessage() {}

func (x *ProjectEventState) ProtoReflect() protoreflect.Message {
	mi := &file_event_project_state_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectEventState.ProtoReflect.Descriptor instead.
func (*ProjectEventState) Descriptor() ([]byte, []int) {
	return file_event_project_state_proto_rawDescGZIP(), []int{1}
}

func (m *ProjectEventState) GetType() isProjectEventState_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *ProjectEventState) GetError() *ErrorProjectEventState {
	if x, ok := x.GetType().(*ProjectEventState_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ProjectEventState) GetIgnored() *IgnoredProjectEventState {
	if x, ok := x.GetType().(*ProjectEventState_Ignored); ok {
		return x.Ignored
	}
	return nil
}

func (x *ProjectEventState) GetPending() *PendingProjectEventState {
	if x, ok := x.GetType().(*ProjectEventState_Pending); ok {
		return x.Pending
	}
	return nil
}

func (x *ProjectEventState) GetLoading() *LoadingProjectEventState {
	if x, ok := x.GetType().(*ProjectEventState_Loading); ok {
		return x.Loading
	}
	return nil
}

func (x *ProjectEventState) GetLoaded() *LoadedProjectEventState {
	if x, ok := x.GetType().(*ProjectEventState_Loaded); ok {
		return x.Loaded
	}
	return nil
}

func (x *ProjectEventState) GetRunning() *RunningProjectEventState {
	if x, ok := x.GetType().(*ProjectEventState_Running); ok {
		return x.Running
	}
	return nil
}

func (x *ProjectEventState) GetWaiting() *WaitingProjectEventState {
	if x, ok := x.GetType().(*ProjectEventState_Waiting); ok {
		return x.Waiting
	}
	return nil
}

func (x *ProjectEventState) GetCompleted() *CompletedProjectEventState {
	if x, ok := x.GetType().(*ProjectEventState_Completed); ok {
		return x.Completed
	}
	return nil
}

type isProjectEventState_Type interface {
	isProjectEventState_Type()
}

type ProjectEventState_Error struct {
	Error *ErrorProjectEventState `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ProjectEventState_Ignored struct {
	Ignored *IgnoredProjectEventState `protobuf:"bytes,2,opt,name=ignored,proto3,oneof"`
}

type ProjectEventState_Pending struct {
	Pending *PendingProjectEventState `protobuf:"bytes,3,opt,name=pending,proto3,oneof"`
}

type ProjectEventState_Loading struct {
	Loading *LoadingProjectEventState `protobuf:"bytes,4,opt,name=loading,proto3,oneof"`
}

type ProjectEventState_Loaded struct {
	Loaded *LoadedProjectEventState `protobuf:"bytes,5,opt,name=loaded,proto3,oneof"`
}

type ProjectEventState_Running struct {
	Running *RunningProjectEventState `protobuf:"bytes,6,opt,name=running,proto3,oneof"`
}

type ProjectEventState_Waiting struct {
	Waiting *WaitingProjectEventState `protobuf:"bytes,7,opt,name=waiting,proto3,oneof"`
}

type ProjectEventState_Completed struct {
	Completed *CompletedProjectEventState `protobuf:"bytes,8,opt,name=completed,proto3,oneof"`
}

func (*ProjectEventState_Error) isProjectEventState_Type() {}

func (*ProjectEventState_Ignored) isProjectEventState_Type() {}

func (*ProjectEventState_Pending) isProjectEventState_Type() {}

func (*ProjectEventState_Loading) isProjectEventState_Type() {}

func (*ProjectEventState_Loaded) isProjectEventState_Type() {}

func (*ProjectEventState_Running) isProjectEventState_Type() {}

func (*ProjectEventState_Waiting) isProjectEventState_Type() {}

func (*ProjectEventState_Completed) isProjectEventState_Type() {}

type ErrorProjectEventState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunSummary *lang.RunSummary `protobuf:"bytes,1,opt,name=run_summary,json=runSummary,proto3" json:"run_summary,omitempty"`
	Error      string           `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ErrorProjectEventState) Reset() {
	*x = ErrorProjectEventState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_project_state_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorProjectEventState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorProjectEventState) ProtoMessage() {}

func (x *ErrorProjectEventState) ProtoReflect() protoreflect.Message {
	mi := &file_event_project_state_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorProjectEventState.ProtoReflect.Descriptor instead.
func (*ErrorProjectEventState) Descriptor() ([]byte, []int) {
	return file_event_project_state_proto_rawDescGZIP(), []int{2}
}

func (x *ErrorProjectEventState) GetRunSummary() *lang.RunSummary {
	if x != nil {
		return x.RunSummary
	}
	return nil
}

func (x *ErrorProjectEventState) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type IgnoredProjectEventState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *IgnoredProjectEventState) Reset() {
	*x = IgnoredProjectEventState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_project_state_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IgnoredProjectEventState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IgnoredProjectEventState) ProtoMessage() {}

func (x *IgnoredProjectEventState) ProtoReflect() protoreflect.Message {
	mi := &file_event_project_state_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IgnoredProjectEventState.ProtoReflect.Descriptor instead.
func (*IgnoredProjectEventState) Descriptor() ([]byte, []int) {
	return file_event_project_state_proto_rawDescGZIP(), []int{3}
}

func (x *IgnoredProjectEventState) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type PendingProjectEventState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PendingProjectEventState) Reset() {
	*x = PendingProjectEventState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_project_state_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendingProjectEventState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingProjectEventState) ProtoMessage() {}

func (x *PendingProjectEventState) ProtoReflect() protoreflect.Message {
	mi := &file_event_project_state_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingProjectEventState.ProtoReflect.Descriptor instead.
func (*PendingProjectEventState) Descriptor() ([]byte, []int) {
	return file_event_project_state_proto_rawDescGZIP(), []int{4}
}

type LoadingProjectEventState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainPath *program.Path `protobuf:"bytes,1,opt,name=main_path,json=mainPath,proto3" json:"main_path,omitempty"`
}

func (x *LoadingProjectEventState) Reset() {
	*x = LoadingProjectEventState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_project_state_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadingProjectEventState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadingProjectEventState) ProtoMessage() {}

func (x *LoadingProjectEventState) ProtoReflect() protoreflect.Message {
	mi := &file_event_project_state_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadingProjectEventState.ProtoReflect.Descriptor instead.
func (*LoadingProjectEventState) Descriptor() ([]byte, []int) {
	return file_event_project_state_proto_rawDescGZIP(), []int{5}
}

func (x *LoadingProjectEventState) GetMainPath() *program.Path {
	if x != nil {
		return x.MainPath
	}
	return nil
}

type LoadedProjectEventState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paths []*program.Path `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
}

func (x *LoadedProjectEventState) Reset() {
	*x = LoadedProjectEventState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_project_state_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadedProjectEventState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadedProjectEventState) ProtoMessage() {}

func (x *LoadedProjectEventState) ProtoReflect() protoreflect.Message {
	mi := &file_event_project_state_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadedProjectEventState.ProtoReflect.Descriptor instead.
func (*LoadedProjectEventState) Descriptor() ([]byte, []int) {
	return file_event_project_state_proto_rawDescGZIP(), []int{6}
}

func (x *LoadedProjectEventState) GetPaths() []*program.Path {
	if x != nil {
		return x.Paths
	}
	return nil
}

type RunningProjectEventState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RunningProjectEventState) Reset() {
	*x = RunningProjectEventState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_project_state_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunningProjectEventState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunningProjectEventState) ProtoMessage() {}

func (x *RunningProjectEventState) ProtoReflect() protoreflect.Message {
	mi := &file_event_project_state_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunningProjectEventState.ProtoReflect.Descriptor instead.
func (*RunningProjectEventState) Descriptor() ([]byte, []int) {
	return file_event_project_state_proto_rawDescGZIP(), []int{7}
}

type CompletedProjectEventState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunSummary *lang.RunSummary `protobuf:"bytes,1,opt,name=run_summary,json=runSummary,proto3" json:"run_summary,omitempty"`
}

func (x *CompletedProjectEventState) Reset() {
	*x = CompletedProjectEventState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_project_state_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompletedProjectEventState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletedProjectEventState) ProtoMessage() {}

func (x *CompletedProjectEventState) ProtoReflect() protoreflect.Message {
	mi := &file_event_project_state_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletedProjectEventState.ProtoReflect.Descriptor instead.
func (*CompletedProjectEventState) Descriptor() ([]byte, []int) {
	return file_event_project_state_proto_rawDescGZIP(), []int{8}
}

func (x *CompletedProjectEventState) GetRunSummary() *lang.RunSummary {
	if x != nil {
		return x.RunSummary
	}
	return nil
}

type WaitingProjectEventState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names      []string         `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	RunSummary *lang.RunSummary `protobuf:"bytes,2,opt,name=run_summary,json=runSummary,proto3" json:"run_summary,omitempty"`
}

func (x *WaitingProjectEventState) Reset() {
	*x = WaitingProjectEventState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_project_state_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitingProjectEventState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingProjectEventState) ProtoMessage() {}

func (x *WaitingProjectEventState) ProtoReflect() protoreflect.Message {
	mi := &file_event_project_state_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingProjectEventState.ProtoReflect.Descriptor instead.
func (*WaitingProjectEventState) Descriptor() ([]byte, []int) {
	return file_event_project_state_proto_rawDescGZIP(), []int{9}
}

func (x *WaitingProjectEventState) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *WaitingProjectEventState) GetRunSummary() *lang.RunSummary {
	if x != nil {
		return x.RunSummary
	}
	return nil
}

var File_event_project_state_proto protoreflect.FileDescriptor

var file_event_project_state_proto_rawDesc = []byte{
	0x0a, 0x19, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x61, 0x75, 0x74,
	0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x72, 0x75,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92,
	0x01, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x32, 0x0a, 0x01, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x01, 0x74, 0x12, 0x43,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0xdd, 0x04, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b,
	0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a, 0x07, 0x69,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x07, 0x69, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65,
	0x68, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x46, 0x0a, 0x07, 0x6c,
	0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6c, 0x6f, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x43, 0x0a, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x12, 0x46, 0x0a, 0x07, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x07, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x4c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x03,
	0xf8, 0x42, 0x01, 0x22, 0x6c, 0x0a, 0x16, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a,
	0x0b, 0x72, 0x75, 0x6e, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e,
	0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x0a, 0x72, 0x75, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x32, 0x0a, 0x18, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x1a, 0x0a, 0x18, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x5b, 0x0a, 0x18, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a,
	0x09, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x22, 0x58,
	0x0a, 0x17, 0x4c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x70, 0x61, 0x74,
	0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b,
	0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x50, 0x61,
	0x74, 0x68, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x92, 0x01, 0x07, 0x22, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x5a, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x72, 0x75, 0x6e, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69,
	0x74, 0x74, 0x65, 0x68, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x0a, 0x72, 0x75, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x22, 0x6e, 0x0a, 0x18, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x72, 0x75, 0x6e, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69,
	0x74, 0x74, 0x65, 0x68, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x0a, 0x72, 0x75, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x42, 0x20, 0x5a, 0x1e, 0x67, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65,
	0x68, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x69, 0x64, 0x6c, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_event_project_state_proto_rawDescOnce sync.Once
	file_event_project_state_proto_rawDescData = file_event_project_state_proto_rawDesc
)

func file_event_project_state_proto_rawDescGZIP() []byte {
	file_event_project_state_proto_rawDescOnce.Do(func() {
		file_event_project_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_project_state_proto_rawDescData)
	})
	return file_event_project_state_proto_rawDescData
}

var file_event_project_state_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_event_project_state_proto_goTypes = []interface{}{
	(*ProjectEventStateRecord)(nil),    // 0: autokitteh.event.ProjectEventStateRecord
	(*ProjectEventState)(nil),          // 1: autokitteh.event.ProjectEventState
	(*ErrorProjectEventState)(nil),     // 2: autokitteh.event.ErrorProjectEventState
	(*IgnoredProjectEventState)(nil),   // 3: autokitteh.event.IgnoredProjectEventState
	(*PendingProjectEventState)(nil),   // 4: autokitteh.event.PendingProjectEventState
	(*LoadingProjectEventState)(nil),   // 5: autokitteh.event.LoadingProjectEventState
	(*LoadedProjectEventState)(nil),    // 6: autokitteh.event.LoadedProjectEventState
	(*RunningProjectEventState)(nil),   // 7: autokitteh.event.RunningProjectEventState
	(*CompletedProjectEventState)(nil), // 8: autokitteh.event.CompletedProjectEventState
	(*WaitingProjectEventState)(nil),   // 9: autokitteh.event.WaitingProjectEventState
	(*timestamppb.Timestamp)(nil),      // 10: google.protobuf.Timestamp
	(*lang.RunSummary)(nil),            // 11: autokitteh.lang.RunSummary
	(*program.Path)(nil),               // 12: autokitteh.program.Path
}
var file_event_project_state_proto_depIdxs = []int32{
	10, // 0: autokitteh.event.ProjectEventStateRecord.t:type_name -> google.protobuf.Timestamp
	1,  // 1: autokitteh.event.ProjectEventStateRecord.state:type_name -> autokitteh.event.ProjectEventState
	2,  // 2: autokitteh.event.ProjectEventState.error:type_name -> autokitteh.event.ErrorProjectEventState
	3,  // 3: autokitteh.event.ProjectEventState.ignored:type_name -> autokitteh.event.IgnoredProjectEventState
	4,  // 4: autokitteh.event.ProjectEventState.pending:type_name -> autokitteh.event.PendingProjectEventState
	5,  // 5: autokitteh.event.ProjectEventState.loading:type_name -> autokitteh.event.LoadingProjectEventState
	6,  // 6: autokitteh.event.ProjectEventState.loaded:type_name -> autokitteh.event.LoadedProjectEventState
	7,  // 7: autokitteh.event.ProjectEventState.running:type_name -> autokitteh.event.RunningProjectEventState
	9,  // 8: autokitteh.event.ProjectEventState.waiting:type_name -> autokitteh.event.WaitingProjectEventState
	8,  // 9: autokitteh.event.ProjectEventState.completed:type_name -> autokitteh.event.CompletedProjectEventState
	11, // 10: autokitteh.event.ErrorProjectEventState.run_summary:type_name -> autokitteh.lang.RunSummary
	12, // 11: autokitteh.event.LoadingProjectEventState.main_path:type_name -> autokitteh.program.Path
	12, // 12: autokitteh.event.LoadedProjectEventState.paths:type_name -> autokitteh.program.Path
	11, // 13: autokitteh.event.CompletedProjectEventState.run_summary:type_name -> autokitteh.lang.RunSummary
	11, // 14: autokitteh.event.WaitingProjectEventState.run_summary:type_name -> autokitteh.lang.RunSummary
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_event_project_state_proto_init() }
func file_event_project_state_proto_init() {
	if File_event_project_state_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_event_project_state_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectEventStateRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_project_state_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectEventState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_project_state_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorProjectEventState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_project_state_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IgnoredProjectEventState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_project_state_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendingProjectEventState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_project_state_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadingProjectEventState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_project_state_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadedProjectEventState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_project_state_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunningProjectEventState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_project_state_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompletedProjectEventState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_project_state_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitingProjectEventState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_event_project_state_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ProjectEventState_Error)(nil),
		(*ProjectEventState_Ignored)(nil),
		(*ProjectEventState_Pending)(nil),
		(*ProjectEventState_Loading)(nil),
		(*ProjectEventState_Loaded)(nil),
		(*ProjectEventState_Running)(nil),
		(*ProjectEventState_Waiting)(nil),
		(*ProjectEventState_Completed)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_project_state_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_event_project_state_proto_goTypes,
		DependencyIndexes: file_event_project_state_proto_depIdxs,
		MessageInfos:      file_event_project_state_proto_msgTypes,
	}.Build()
	File_event_project_state_proto = out.File
	file_event_project_state_proto_rawDesc = nil
	file_event_project_state_proto_goTypes = nil
	file_event_project_state_proto_depIdxs = nil
}
