// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: values/values.proto

package values

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type None struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *None) Reset() {
	*x = None{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *None) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*None) ProtoMessage() {}

func (x *None) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use None.ProtoReflect.Descriptor instead.
func (*None) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{0}
}

type String struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	V string `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
}

func (x *String) Reset() {
	*x = String{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *String) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*String) ProtoMessage() {}

func (x *String) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use String.ProtoReflect.Descriptor instead.
func (*String) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{1}
}

func (x *String) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

type Integer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	V int64 `protobuf:"varint,1,opt,name=v,proto3" json:"v,omitempty"`
}

func (x *Integer) Reset() {
	*x = Integer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integer) ProtoMessage() {}

func (x *Integer) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integer.ProtoReflect.Descriptor instead.
func (*Integer) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{2}
}

func (x *Integer) GetV() int64 {
	if x != nil {
		return x.V
	}
	return 0
}

type Float struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	V float32 `protobuf:"fixed32,1,opt,name=v,proto3" json:"v,omitempty"`
}

func (x *Float) Reset() {
	*x = Float{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Float) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Float) ProtoMessage() {}

func (x *Float) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Float.ProtoReflect.Descriptor instead.
func (*Float) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{3}
}

func (x *Float) GetV() float32 {
	if x != nil {
		return x.V
	}
	return 0
}

type Boolean struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	V bool `protobuf:"varint,1,opt,name=v,proto3" json:"v,omitempty"`
}

func (x *Boolean) Reset() {
	*x = Boolean{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Boolean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Boolean) ProtoMessage() {}

func (x *Boolean) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Boolean.ProtoReflect.Descriptor instead.
func (*Boolean) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{4}
}

func (x *Boolean) GetV() bool {
	if x != nil {
		return x.V
	}
	return false
}

// For Starlark, will be used for Tuple in return values.
type List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vs []*Value `protobuf:"bytes,1,rep,name=vs,proto3" json:"vs,omitempty"`
}

func (x *List) Reset() {
	*x = List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{5}
}

func (x *List) GetVs() []*Value {
	if x != nil {
		return x.Vs
	}
	return nil
}

type Set struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vs []*Value `protobuf:"bytes,1,rep,name=vs,proto3" json:"vs,omitempty"`
}

func (x *Set) Reset() {
	*x = Set{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Set) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Set) ProtoMessage() {}

func (x *Set) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Set.ProtoReflect.Descriptor instead.
func (*Set) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{6}
}

func (x *Set) GetVs() []*Value {
	if x != nil {
		return x.Vs
	}
	return nil
}

type DictItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	K *Value `protobuf:"bytes,1,opt,name=k,proto3" json:"k,omitempty"`
	V *Value `protobuf:"bytes,2,opt,name=v,proto3" json:"v,omitempty"`
}

func (x *DictItem) Reset() {
	*x = DictItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictItem) ProtoMessage() {}

func (x *DictItem) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictItem.ProtoReflect.Descriptor instead.
func (*DictItem) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{7}
}

func (x *DictItem) GetK() *Value {
	if x != nil {
		return x.K
	}
	return nil
}

func (x *DictItem) GetV() *Value {
	if x != nil {
		return x.V
	}
	return nil
}

type Dict struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*DictItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Dict) Reset() {
	*x = Dict{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dict) ProtoMessage() {}

func (x *Dict) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dict.ProtoReflect.Descriptor instead.
func (*Dict) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{8}
}

func (x *Dict) GetItems() []*DictItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type Bytes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	V []byte `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
}

func (x *Bytes) Reset() {
	*x = Bytes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bytes) ProtoMessage() {}

func (x *Bytes) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bytes.ProtoReflect.Descriptor instead.
func (*Bytes) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{9}
}

func (x *Bytes) GetV() []byte {
	if x != nil {
		return x.V
	}
	return nil
}

type Time struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	T *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=t,proto3" json:"t,omitempty"`
}

func (x *Time) Reset() {
	*x = Time{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Time) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Time) ProtoMessage() {}

func (x *Time) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Time.ProtoReflect.Descriptor instead.
func (*Time) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{10}
}

func (x *Time) GetT() *timestamppb.Timestamp {
	if x != nil {
		return x.T
	}
	return nil
}

type Duration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	D *durationpb.Duration `protobuf:"bytes,1,opt,name=d,proto3" json:"d,omitempty"`
}

func (x *Duration) Reset() {
	*x = Duration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Duration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Duration) ProtoMessage() {}

func (x *Duration) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Duration.ProtoReflect.Descriptor instead.
func (*Duration) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{11}
}

func (x *Duration) GetD() *durationpb.Duration {
	if x != nil {
		return x.D
	}
	return nil
}

type Call struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Issuer string          `protobuf:"bytes,3,opt,name=issuer,proto3" json:"issuer,omitempty"` // plugin id for plugins
	Flags  map[string]bool `protobuf:"bytes,4,rep,name=flags,proto3" json:"flags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Call) Reset() {
	*x = Call{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Call) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Call) ProtoMessage() {}

func (x *Call) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Call.ProtoReflect.Descriptor instead.
func (*Call) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{12}
}

func (x *Call) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Call) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Call) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *Call) GetFlags() map[string]bool {
	if x != nil {
		return x.Flags
	}
	return nil
}

type Struct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctor   *Value            `protobuf:"bytes,1,opt,name=ctor,proto3" json:"ctor,omitempty"`
	Fields map[string]*Value `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Struct) Reset() {
	*x = Struct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Struct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Struct) ProtoMessage() {}

func (x *Struct) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Struct.ProtoReflect.Descriptor instead.
func (*Struct) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{13}
}

func (x *Struct) GetCtor() *Value {
	if x != nil {
		return x.Ctor
	}
	return nil
}

func (x *Struct) GetFields() map[string]*Value {
	if x != nil {
		return x.Fields
	}
	return nil
}

type Module struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Members map[string]*Value `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Module) Reset() {
	*x = Module{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{14}
}

func (x *Module) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Module) GetMembers() map[string]*Value {
	if x != nil {
		return x.Members
	}
	return nil
}

type Symbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Symbol) Reset() {
	*x = Symbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Symbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Symbol) ProtoMessage() {}

func (x *Symbol) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Symbol.ProtoReflect.Descriptor instead.
func (*Symbol) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{15}
}

func (x *Symbol) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FunctionSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Doc         string   `protobuf:"bytes,2,opt,name=doc,proto3" json:"doc,omitempty"`
	NArgs       uint32   `protobuf:"varint,3,opt,name=n_args,json=nArgs,proto3" json:"n_args,omitempty"`
	NKwonlyargs uint32   `protobuf:"varint,4,opt,name=n_kwonlyargs,json=nKwonlyargs,proto3" json:"n_kwonlyargs,omitempty"`
	ArgsNames   []string `protobuf:"bytes,5,rep,name=args_names,json=argsNames,proto3" json:"args_names,omitempty"` // see https://github.com/google/starlark-go/blob/master/starlark/value.go#L703.
	HasVarargs  bool     `protobuf:"varint,6,opt,name=has_varargs,json=hasVarargs,proto3" json:"has_varargs,omitempty"`
	HasKwargs   bool     `protobuf:"varint,7,opt,name=has_kwargs,json=hasKwargs,proto3" json:"has_kwargs,omitempty"`
}

func (x *FunctionSignature) Reset() {
	*x = FunctionSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionSignature) ProtoMessage() {}

func (x *FunctionSignature) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionSignature.ProtoReflect.Descriptor instead.
func (*FunctionSignature) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{16}
}

func (x *FunctionSignature) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FunctionSignature) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *FunctionSignature) GetNArgs() uint32 {
	if x != nil {
		return x.NArgs
	}
	return 0
}

func (x *FunctionSignature) GetNKwonlyargs() uint32 {
	if x != nil {
		return x.NKwonlyargs
	}
	return 0
}

func (x *FunctionSignature) GetArgsNames() []string {
	if x != nil {
		return x.ArgsNames
	}
	return nil
}

func (x *FunctionSignature) GetHasVarargs() bool {
	if x != nil {
		return x.HasVarargs
	}
	return false
}

func (x *FunctionSignature) GetHasKwargs() bool {
	if x != nil {
		return x.HasKwargs
	}
	return false
}

type Function struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FuncId string             `protobuf:"bytes,1,opt,name=func_id,json=funcId,proto3" json:"func_id,omitempty"`
	Lang   string             `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	Scope  string             `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
	Sig    *FunctionSignature `protobuf:"bytes,4,opt,name=sig,proto3" json:"sig,omitempty"` // optional - not necessary.
}

func (x *Function) Reset() {
	*x = Function{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Function) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Function) ProtoMessage() {}

func (x *Function) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Function.ProtoReflect.Descriptor instead.
func (*Function) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{17}
}

func (x *Function) GetFuncId() string {
	if x != nil {
		return x.FuncId
	}
	return ""
}

func (x *Function) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *Function) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *Function) GetSig() *FunctionSignature {
	if x != nil {
		return x.Sig
	}
	return nil
}

type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*Value_None
	//	*Value_String_
	//	*Value_Integer
	//	*Value_Boolean
	//	*Value_List
	//	*Value_Dict
	//	*Value_Float
	//	*Value_Set
	//	*Value_Bytes
	//	*Value_Time
	//	*Value_Duration
	//	*Value_Symbol
	//	*Value_Struct
	//	*Value_Module
	//	*Value_Function
	//	*Value_Call
	Type isValue_Type `protobuf_oneof:"type"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_values_values_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_values_values_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_values_values_proto_rawDescGZIP(), []int{18}
}

func (m *Value) GetType() isValue_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Value) GetNone() *None {
	if x, ok := x.GetType().(*Value_None); ok {
		return x.None
	}
	return nil
}

func (x *Value) GetString_() *String {
	if x, ok := x.GetType().(*Value_String_); ok {
		return x.String_
	}
	return nil
}

func (x *Value) GetInteger() *Integer {
	if x, ok := x.GetType().(*Value_Integer); ok {
		return x.Integer
	}
	return nil
}

func (x *Value) GetBoolean() *Boolean {
	if x, ok := x.GetType().(*Value_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (x *Value) GetList() *List {
	if x, ok := x.GetType().(*Value_List); ok {
		return x.List
	}
	return nil
}

func (x *Value) GetDict() *Dict {
	if x, ok := x.GetType().(*Value_Dict); ok {
		return x.Dict
	}
	return nil
}

func (x *Value) GetFloat() *Float {
	if x, ok := x.GetType().(*Value_Float); ok {
		return x.Float
	}
	return nil
}

func (x *Value) GetSet() *Set {
	if x, ok := x.GetType().(*Value_Set); ok {
		return x.Set
	}
	return nil
}

func (x *Value) GetBytes() *Bytes {
	if x, ok := x.GetType().(*Value_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (x *Value) GetTime() *Time {
	if x, ok := x.GetType().(*Value_Time); ok {
		return x.Time
	}
	return nil
}

func (x *Value) GetDuration() *Duration {
	if x, ok := x.GetType().(*Value_Duration); ok {
		return x.Duration
	}
	return nil
}

func (x *Value) GetSymbol() *Symbol {
	if x, ok := x.GetType().(*Value_Symbol); ok {
		return x.Symbol
	}
	return nil
}

func (x *Value) GetStruct() *Struct {
	if x, ok := x.GetType().(*Value_Struct); ok {
		return x.Struct
	}
	return nil
}

func (x *Value) GetModule() *Module {
	if x, ok := x.GetType().(*Value_Module); ok {
		return x.Module
	}
	return nil
}

func (x *Value) GetFunction() *Function {
	if x, ok := x.GetType().(*Value_Function); ok {
		return x.Function
	}
	return nil
}

func (x *Value) GetCall() *Call {
	if x, ok := x.GetType().(*Value_Call); ok {
		return x.Call
	}
	return nil
}

type isValue_Type interface {
	isValue_Type()
}

type Value_None struct {
	None *None `protobuf:"bytes,1,opt,name=none,proto3,oneof"`
}

type Value_String_ struct {
	String_ *String `protobuf:"bytes,2,opt,name=string,proto3,oneof"`
}

type Value_Integer struct {
	Integer *Integer `protobuf:"bytes,3,opt,name=integer,proto3,oneof"`
}

type Value_Boolean struct {
	Boolean *Boolean `protobuf:"bytes,4,opt,name=boolean,proto3,oneof"`
}

type Value_List struct {
	List *List `protobuf:"bytes,5,opt,name=list,proto3,oneof"`
}

type Value_Dict struct {
	Dict *Dict `protobuf:"bytes,6,opt,name=dict,proto3,oneof"`
}

type Value_Float struct {
	Float *Float `protobuf:"bytes,7,opt,name=float,proto3,oneof"`
}

type Value_Set struct {
	Set *Set `protobuf:"bytes,8,opt,name=set,proto3,oneof"`
}

type Value_Bytes struct {
	Bytes *Bytes `protobuf:"bytes,9,opt,name=bytes,proto3,oneof"`
}

type Value_Time struct {
	Time *Time `protobuf:"bytes,10,opt,name=time,proto3,oneof"`
}

type Value_Duration struct {
	Duration *Duration `protobuf:"bytes,11,opt,name=duration,proto3,oneof"`
}

type Value_Symbol struct {
	Symbol *Symbol `protobuf:"bytes,12,opt,name=symbol,proto3,oneof"`
}

type Value_Struct struct {
	Struct *Struct `protobuf:"bytes,50,opt,name=struct,proto3,oneof"`
}

type Value_Module struct {
	Module *Module `protobuf:"bytes,51,opt,name=module,proto3,oneof"`
}

type Value_Function struct {
	Function *Function `protobuf:"bytes,52,opt,name=function,proto3,oneof"`
}

type Value_Call struct {
	Call *Call `protobuf:"bytes,100,opt,name=call,proto3,oneof"`
}

func (*Value_None) isValue_Type() {}

func (*Value_String_) isValue_Type() {}

func (*Value_Integer) isValue_Type() {}

func (*Value_Boolean) isValue_Type() {}

func (*Value_List) isValue_Type() {}

func (*Value_Dict) isValue_Type() {}

func (*Value_Float) isValue_Type() {}

func (*Value_Set) isValue_Type() {}

func (*Value_Bytes) isValue_Type() {}

func (*Value_Time) isValue_Type() {}

func (*Value_Duration) isValue_Type() {}

func (*Value_Symbol) isValue_Type() {}

func (*Value_Struct) isValue_Type() {}

func (*Value_Module) isValue_Type() {}

func (*Value_Function) isValue_Type() {}

func (*Value_Call) isValue_Type() {}

var File_values_values_proto protoreflect.FileDescriptor

var file_values_values_proto_rawDesc = []byte{
	0x0a, 0x13, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65,
	0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x06, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x22, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x01, 0x76, 0x22, 0x17, 0x0a, 0x07, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x0c, 0x0a,
	0x01, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x76, 0x22, 0x15, 0x0a, 0x05, 0x46,
	0x6c, 0x6f, 0x61, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x01, 0x76, 0x22, 0x17, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x0c, 0x0a,
	0x01, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x01, 0x76, 0x22, 0x3f, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x02, 0x76, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x92, 0x01,
	0x07, 0x22, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x02, 0x76, 0x73, 0x22, 0x3e, 0x0a, 0x03,
	0x53, 0x65, 0x74, 0x12, 0x37, 0x0a, 0x02, 0x76, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x92, 0x01,
	0x07, 0x22, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x02, 0x76, 0x73, 0x22, 0x6e, 0x0a, 0x08,
	0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x01, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68,
	0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x01, 0x6b, 0x12, 0x30, 0x0a, 0x01, 0x76, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74,
	0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x01, 0x76, 0x22, 0x48, 0x0a, 0x04,
	0x44, 0x69, 0x63, 0x74, 0x12, 0x40, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68,
	0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x92, 0x01, 0x07, 0x22, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x15, 0x0a, 0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x0c, 0x0a, 0x01, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x76, 0x22, 0x3a, 0x0a,
	0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x01, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x01, 0x74, 0x22, 0x3d, 0x0a, 0x08, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x01, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x01, 0x64, 0x22, 0xb6, 0x01, 0x0a, 0x04, 0x43, 0x61, 0x6c,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x38, 0x0a,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x46, 0x6c, 0x61, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xfc, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x36, 0x0a, 0x04,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x65, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65,
	0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x26, 0xfa, 0x42, 0x23,
	0x9a, 0x01, 0x20, 0x18, 0x01, 0x22, 0x1c, 0x72, 0x1a, 0x32, 0x18, 0x5e, 0x5b, 0x61, 0x2d, 0x7a,
	0x41, 0x2d, 0x5a, 0x5f, 0x5d, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5f,
	0x5d, 0x2a, 0x24, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x53, 0x0a, 0x0b, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xe8, 0x01, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x32, 0x03, 0x5e, 0x2e, 0x2b, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x68, 0x0a, 0x07, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x42, 0x26, 0xfa, 0x42, 0x23, 0x9a, 0x01, 0x20, 0x18, 0x01, 0x22, 0x1c,
	0x72, 0x1a, 0x32, 0x18, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x5f, 0x5d, 0x5b, 0x61,
	0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5f, 0x5d, 0x2a, 0x24, 0x52, 0x07, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x1a, 0x54, 0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74,
	0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1c, 0x0a, 0x06, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x11, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x5f, 0x6b, 0x77, 0x6f, 0x6e, 0x6c, 0x79, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x4b, 0x77, 0x6f, 0x6e, 0x6c, 0x79, 0x61, 0x72, 0x67, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x72, 0x67, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x67, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x68, 0x61, 0x73, 0x5f, 0x76, 0x61, 0x72, 0x61, 0x72, 0x67, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x56, 0x61, 0x72, 0x61, 0x72, 0x67, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x6b, 0x77, 0x61, 0x72, 0x67, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x4b, 0x77, 0x61, 0x72, 0x67, 0x73, 0x22, 0xb4,
	0x01, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x07, 0x66,
	0x75, 0x6e, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42,
	0x11, 0x72, 0x0f, 0x32, 0x0d, 0x5e, 0x46, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x66, 0x2e, 0x5d,
	0x2b, 0x24, 0x52, 0x06, 0x66, 0x75, 0x6e, 0x63, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xfa, 0x42, 0x14, 0x72, 0x12, 0x32,
	0x10, 0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x5f, 0x2d, 0x5d, 0x2b,
	0x24, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x36, 0x0a,
	0x03, 0x73, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x03, 0x73, 0x69, 0x67, 0x22, 0xc4, 0x06, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x2d, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x12, 0x33,
	0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65,
	0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x07, 0x62,
	0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c,
	0x65, 0x61, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x69, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x48, 0x00, 0x52, 0x04, 0x64, 0x69, 0x63,
	0x74, 0x12, 0x30, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6c,
	0x6f, 0x61, 0x74, 0x12, 0x2a, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12,
	0x30, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x39, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x48, 0x00, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x00, 0x52, 0x06, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18,
	0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74,
	0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x48, 0x00, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68,
	0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x04,
	0x63, 0x61, 0x6c, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x21, 0x5a, 0x1f,
	0x67, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x64, 0x65,
	0x76, 0x2f, 0x69, 0x64, 0x6c, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_values_values_proto_rawDescOnce sync.Once
	file_values_values_proto_rawDescData = file_values_values_proto_rawDesc
)

func file_values_values_proto_rawDescGZIP() []byte {
	file_values_values_proto_rawDescOnce.Do(func() {
		file_values_values_proto_rawDescData = protoimpl.X.CompressGZIP(file_values_values_proto_rawDescData)
	})
	return file_values_values_proto_rawDescData
}

var file_values_values_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_values_values_proto_goTypes = []interface{}{
	(*None)(nil),                  // 0: autokitteh.values.None
	(*String)(nil),                // 1: autokitteh.values.String
	(*Integer)(nil),               // 2: autokitteh.values.Integer
	(*Float)(nil),                 // 3: autokitteh.values.Float
	(*Boolean)(nil),               // 4: autokitteh.values.Boolean
	(*List)(nil),                  // 5: autokitteh.values.List
	(*Set)(nil),                   // 6: autokitteh.values.Set
	(*DictItem)(nil),              // 7: autokitteh.values.DictItem
	(*Dict)(nil),                  // 8: autokitteh.values.Dict
	(*Bytes)(nil),                 // 9: autokitteh.values.Bytes
	(*Time)(nil),                  // 10: autokitteh.values.Time
	(*Duration)(nil),              // 11: autokitteh.values.Duration
	(*Call)(nil),                  // 12: autokitteh.values.Call
	(*Struct)(nil),                // 13: autokitteh.values.Struct
	(*Module)(nil),                // 14: autokitteh.values.Module
	(*Symbol)(nil),                // 15: autokitteh.values.Symbol
	(*FunctionSignature)(nil),     // 16: autokitteh.values.FunctionSignature
	(*Function)(nil),              // 17: autokitteh.values.Function
	(*Value)(nil),                 // 18: autokitteh.values.Value
	nil,                           // 19: autokitteh.values.Call.FlagsEntry
	nil,                           // 20: autokitteh.values.Struct.FieldsEntry
	nil,                           // 21: autokitteh.values.Module.MembersEntry
	(*timestamppb.Timestamp)(nil), // 22: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 23: google.protobuf.Duration
}
var file_values_values_proto_depIdxs = []int32{
	18, // 0: autokitteh.values.List.vs:type_name -> autokitteh.values.Value
	18, // 1: autokitteh.values.Set.vs:type_name -> autokitteh.values.Value
	18, // 2: autokitteh.values.DictItem.k:type_name -> autokitteh.values.Value
	18, // 3: autokitteh.values.DictItem.v:type_name -> autokitteh.values.Value
	7,  // 4: autokitteh.values.Dict.items:type_name -> autokitteh.values.DictItem
	22, // 5: autokitteh.values.Time.t:type_name -> google.protobuf.Timestamp
	23, // 6: autokitteh.values.Duration.d:type_name -> google.protobuf.Duration
	19, // 7: autokitteh.values.Call.flags:type_name -> autokitteh.values.Call.FlagsEntry
	18, // 8: autokitteh.values.Struct.ctor:type_name -> autokitteh.values.Value
	20, // 9: autokitteh.values.Struct.fields:type_name -> autokitteh.values.Struct.FieldsEntry
	21, // 10: autokitteh.values.Module.members:type_name -> autokitteh.values.Module.MembersEntry
	16, // 11: autokitteh.values.Function.sig:type_name -> autokitteh.values.FunctionSignature
	0,  // 12: autokitteh.values.Value.none:type_name -> autokitteh.values.None
	1,  // 13: autokitteh.values.Value.string:type_name -> autokitteh.values.String
	2,  // 14: autokitteh.values.Value.integer:type_name -> autokitteh.values.Integer
	4,  // 15: autokitteh.values.Value.boolean:type_name -> autokitteh.values.Boolean
	5,  // 16: autokitteh.values.Value.list:type_name -> autokitteh.values.List
	8,  // 17: autokitteh.values.Value.dict:type_name -> autokitteh.values.Dict
	3,  // 18: autokitteh.values.Value.float:type_name -> autokitteh.values.Float
	6,  // 19: autokitteh.values.Value.set:type_name -> autokitteh.values.Set
	9,  // 20: autokitteh.values.Value.bytes:type_name -> autokitteh.values.Bytes
	10, // 21: autokitteh.values.Value.time:type_name -> autokitteh.values.Time
	11, // 22: autokitteh.values.Value.duration:type_name -> autokitteh.values.Duration
	15, // 23: autokitteh.values.Value.symbol:type_name -> autokitteh.values.Symbol
	13, // 24: autokitteh.values.Value.struct:type_name -> autokitteh.values.Struct
	14, // 25: autokitteh.values.Value.module:type_name -> autokitteh.values.Module
	17, // 26: autokitteh.values.Value.function:type_name -> autokitteh.values.Function
	12, // 27: autokitteh.values.Value.call:type_name -> autokitteh.values.Call
	18, // 28: autokitteh.values.Struct.FieldsEntry.value:type_name -> autokitteh.values.Value
	18, // 29: autokitteh.values.Module.MembersEntry.value:type_name -> autokitteh.values.Value
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_values_values_proto_init() }
func file_values_values_proto_init() {
	if File_values_values_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_values_values_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*None); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_values_values_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*String); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_values_values_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Integer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_values_values_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Float); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_values_values_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Boolean); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_values_values_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_values_values_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Set); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_values_values_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_values_values_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dict); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_values_values_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bytes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_values_values_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Time); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_values_values_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Duration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_values_values_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Call); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_values_values_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Struct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_values_values_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_values_values_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Symbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_values_values_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_values_values_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Function); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_values_values_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_values_values_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*Value_None)(nil),
		(*Value_String_)(nil),
		(*Value_Integer)(nil),
		(*Value_Boolean)(nil),
		(*Value_List)(nil),
		(*Value_Dict)(nil),
		(*Value_Float)(nil),
		(*Value_Set)(nil),
		(*Value_Bytes)(nil),
		(*Value_Time)(nil),
		(*Value_Duration)(nil),
		(*Value_Symbol)(nil),
		(*Value_Struct)(nil),
		(*Value_Module)(nil),
		(*Value_Function)(nil),
		(*Value_Call)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_values_values_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_values_values_proto_goTypes,
		DependencyIndexes: file_values_values_proto_depIdxs,
		MessageInfos:      file_values_values_proto_msgTypes,
	}.Build()
	File_values_values_proto = out.File
	file_values_values_proto_rawDesc = nil
	file_values_values_proto_goTypes = nil
	file_values_values_proto_depIdxs = nil
}
