// source: pluginsprovidersvc/svc.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var validate_validate_pb = require('../validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
var plugin_desc_pb = require('../plugin/desc_pb.js');
goog.object.extend(proto, plugin_desc_pb);
var values_values_pb = require('../values/values_pb.js');
goog.object.extend(proto, values_values_pb);
var program_error_pb = require('../program/error_pb.js');
goog.object.extend(proto, program_error_pb);
goog.exportSymbol('proto.autokitteh.pluginsprovidersvc.CallValueRequest', null, global);
goog.exportSymbol('proto.autokitteh.pluginsprovidersvc.CallValueResponse', null, global);
goog.exportSymbol('proto.autokitteh.pluginsprovidersvc.CallValueResponse.RetCase', null, global);
goog.exportSymbol('proto.autokitteh.pluginsprovidersvc.DescribeRequest', null, global);
goog.exportSymbol('proto.autokitteh.pluginsprovidersvc.DescribeResponse', null, global);
goog.exportSymbol('proto.autokitteh.pluginsprovidersvc.GetValuesRequest', null, global);
goog.exportSymbol('proto.autokitteh.pluginsprovidersvc.GetValuesResponse', null, global);
goog.exportSymbol('proto.autokitteh.pluginsprovidersvc.ListRequest', null, global);
goog.exportSymbol('proto.autokitteh.pluginsprovidersvc.ListResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.pluginsprovidersvc.ListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.pluginsprovidersvc.ListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.pluginsprovidersvc.ListRequest.displayName = 'proto.autokitteh.pluginsprovidersvc.ListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.pluginsprovidersvc.ListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.autokitteh.pluginsprovidersvc.ListResponse.repeatedFields_, null);
};
goog.inherits(proto.autokitteh.pluginsprovidersvc.ListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.pluginsprovidersvc.ListResponse.displayName = 'proto.autokitteh.pluginsprovidersvc.ListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.pluginsprovidersvc.DescribeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.pluginsprovidersvc.DescribeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.pluginsprovidersvc.DescribeRequest.displayName = 'proto.autokitteh.pluginsprovidersvc.DescribeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.pluginsprovidersvc.DescribeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.pluginsprovidersvc.DescribeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.pluginsprovidersvc.DescribeResponse.displayName = 'proto.autokitteh.pluginsprovidersvc.DescribeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.pluginsprovidersvc.GetValuesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.autokitteh.pluginsprovidersvc.GetValuesRequest.repeatedFields_, null);
};
goog.inherits(proto.autokitteh.pluginsprovidersvc.GetValuesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.pluginsprovidersvc.GetValuesRequest.displayName = 'proto.autokitteh.pluginsprovidersvc.GetValuesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.pluginsprovidersvc.GetValuesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.autokitteh.pluginsprovidersvc.GetValuesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.pluginsprovidersvc.GetValuesResponse.displayName = 'proto.autokitteh.pluginsprovidersvc.GetValuesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.pluginsprovidersvc.CallValueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.autokitteh.pluginsprovidersvc.CallValueRequest.repeatedFields_, null);
};
goog.inherits(proto.autokitteh.pluginsprovidersvc.CallValueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.pluginsprovidersvc.CallValueRequest.displayName = 'proto.autokitteh.pluginsprovidersvc.CallValueRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.autokitteh.pluginsprovidersvc.CallValueResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.autokitteh.pluginsprovidersvc.CallValueResponse.oneofGroups_);
};
goog.inherits(proto.autokitteh.pluginsprovidersvc.CallValueResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.autokitteh.pluginsprovidersvc.CallValueResponse.displayName = 'proto.autokitteh.pluginsprovidersvc.CallValueResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.pluginsprovidersvc.ListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.pluginsprovidersvc.ListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.pluginsprovidersvc.ListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.pluginsprovidersvc.ListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.pluginsprovidersvc.ListRequest}
 */
proto.autokitteh.pluginsprovidersvc.ListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.pluginsprovidersvc.ListRequest;
  return proto.autokitteh.pluginsprovidersvc.ListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.pluginsprovidersvc.ListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.pluginsprovidersvc.ListRequest}
 */
proto.autokitteh.pluginsprovidersvc.ListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.pluginsprovidersvc.ListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.pluginsprovidersvc.ListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.pluginsprovidersvc.ListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.pluginsprovidersvc.ListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.autokitteh.pluginsprovidersvc.ListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.pluginsprovidersvc.ListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.pluginsprovidersvc.ListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.pluginsprovidersvc.ListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.pluginsprovidersvc.ListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    idsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.pluginsprovidersvc.ListResponse}
 */
proto.autokitteh.pluginsprovidersvc.ListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.pluginsprovidersvc.ListResponse;
  return proto.autokitteh.pluginsprovidersvc.ListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.pluginsprovidersvc.ListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.pluginsprovidersvc.ListResponse}
 */
proto.autokitteh.pluginsprovidersvc.ListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.pluginsprovidersvc.ListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.pluginsprovidersvc.ListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.pluginsprovidersvc.ListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.pluginsprovidersvc.ListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string ids = 1;
 * @return {!Array<string>}
 */
proto.autokitteh.pluginsprovidersvc.ListResponse.prototype.getIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.autokitteh.pluginsprovidersvc.ListResponse} returns this
 */
proto.autokitteh.pluginsprovidersvc.ListResponse.prototype.setIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.autokitteh.pluginsprovidersvc.ListResponse} returns this
 */
proto.autokitteh.pluginsprovidersvc.ListResponse.prototype.addIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.autokitteh.pluginsprovidersvc.ListResponse} returns this
 */
proto.autokitteh.pluginsprovidersvc.ListResponse.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.pluginsprovidersvc.DescribeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.pluginsprovidersvc.DescribeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.pluginsprovidersvc.DescribeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.pluginsprovidersvc.DescribeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.pluginsprovidersvc.DescribeRequest}
 */
proto.autokitteh.pluginsprovidersvc.DescribeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.pluginsprovidersvc.DescribeRequest;
  return proto.autokitteh.pluginsprovidersvc.DescribeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.pluginsprovidersvc.DescribeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.pluginsprovidersvc.DescribeRequest}
 */
proto.autokitteh.pluginsprovidersvc.DescribeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.pluginsprovidersvc.DescribeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.pluginsprovidersvc.DescribeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.pluginsprovidersvc.DescribeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.pluginsprovidersvc.DescribeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.autokitteh.pluginsprovidersvc.DescribeRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.pluginsprovidersvc.DescribeRequest} returns this
 */
proto.autokitteh.pluginsprovidersvc.DescribeRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.pluginsprovidersvc.DescribeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.pluginsprovidersvc.DescribeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.pluginsprovidersvc.DescribeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.pluginsprovidersvc.DescribeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    desc: (f = msg.getDesc()) && plugin_desc_pb.PluginDesc.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.pluginsprovidersvc.DescribeResponse}
 */
proto.autokitteh.pluginsprovidersvc.DescribeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.pluginsprovidersvc.DescribeResponse;
  return proto.autokitteh.pluginsprovidersvc.DescribeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.pluginsprovidersvc.DescribeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.pluginsprovidersvc.DescribeResponse}
 */
proto.autokitteh.pluginsprovidersvc.DescribeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new plugin_desc_pb.PluginDesc;
      reader.readMessage(value,plugin_desc_pb.PluginDesc.deserializeBinaryFromReader);
      msg.setDesc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.pluginsprovidersvc.DescribeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.pluginsprovidersvc.DescribeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.pluginsprovidersvc.DescribeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.pluginsprovidersvc.DescribeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDesc();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      plugin_desc_pb.PluginDesc.serializeBinaryToWriter
    );
  }
};


/**
 * optional autokitteh.plugin.PluginDesc desc = 1;
 * @return {?proto.autokitteh.plugin.PluginDesc}
 */
proto.autokitteh.pluginsprovidersvc.DescribeResponse.prototype.getDesc = function() {
  return /** @type{?proto.autokitteh.plugin.PluginDesc} */ (
    jspb.Message.getWrapperField(this, plugin_desc_pb.PluginDesc, 1));
};


/**
 * @param {?proto.autokitteh.plugin.PluginDesc|undefined} value
 * @return {!proto.autokitteh.pluginsprovidersvc.DescribeResponse} returns this
*/
proto.autokitteh.pluginsprovidersvc.DescribeResponse.prototype.setDesc = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.pluginsprovidersvc.DescribeResponse} returns this
 */
proto.autokitteh.pluginsprovidersvc.DescribeResponse.prototype.clearDesc = function() {
  return this.setDesc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.pluginsprovidersvc.DescribeResponse.prototype.hasDesc = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.autokitteh.pluginsprovidersvc.GetValuesRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.pluginsprovidersvc.GetValuesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.pluginsprovidersvc.GetValuesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.pluginsprovidersvc.GetValuesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.pluginsprovidersvc.GetValuesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.pluginsprovidersvc.GetValuesRequest}
 */
proto.autokitteh.pluginsprovidersvc.GetValuesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.pluginsprovidersvc.GetValuesRequest;
  return proto.autokitteh.pluginsprovidersvc.GetValuesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.pluginsprovidersvc.GetValuesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.pluginsprovidersvc.GetValuesRequest}
 */
proto.autokitteh.pluginsprovidersvc.GetValuesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.pluginsprovidersvc.GetValuesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.pluginsprovidersvc.GetValuesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.pluginsprovidersvc.GetValuesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.pluginsprovidersvc.GetValuesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.autokitteh.pluginsprovidersvc.GetValuesRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.pluginsprovidersvc.GetValuesRequest} returns this
 */
proto.autokitteh.pluginsprovidersvc.GetValuesRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string names = 2;
 * @return {!Array<string>}
 */
proto.autokitteh.pluginsprovidersvc.GetValuesRequest.prototype.getNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.autokitteh.pluginsprovidersvc.GetValuesRequest} returns this
 */
proto.autokitteh.pluginsprovidersvc.GetValuesRequest.prototype.setNamesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.autokitteh.pluginsprovidersvc.GetValuesRequest} returns this
 */
proto.autokitteh.pluginsprovidersvc.GetValuesRequest.prototype.addNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.autokitteh.pluginsprovidersvc.GetValuesRequest} returns this
 */
proto.autokitteh.pluginsprovidersvc.GetValuesRequest.prototype.clearNamesList = function() {
  return this.setNamesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.pluginsprovidersvc.GetValuesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.pluginsprovidersvc.GetValuesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.pluginsprovidersvc.GetValuesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.pluginsprovidersvc.GetValuesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesMap: (f = msg.getValuesMap()) ? f.toObject(includeInstance, proto.autokitteh.values.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.pluginsprovidersvc.GetValuesResponse}
 */
proto.autokitteh.pluginsprovidersvc.GetValuesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.pluginsprovidersvc.GetValuesResponse;
  return proto.autokitteh.pluginsprovidersvc.GetValuesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.pluginsprovidersvc.GetValuesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.pluginsprovidersvc.GetValuesResponse}
 */
proto.autokitteh.pluginsprovidersvc.GetValuesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getValuesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.autokitteh.values.Value.deserializeBinaryFromReader, "", new proto.autokitteh.values.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.pluginsprovidersvc.GetValuesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.pluginsprovidersvc.GetValuesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.pluginsprovidersvc.GetValuesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.pluginsprovidersvc.GetValuesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.autokitteh.values.Value.serializeBinaryToWriter);
  }
};


/**
 * map<string, autokitteh.values.Value> values = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.autokitteh.values.Value>}
 */
proto.autokitteh.pluginsprovidersvc.GetValuesResponse.prototype.getValuesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.autokitteh.values.Value>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.autokitteh.values.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.autokitteh.pluginsprovidersvc.GetValuesResponse} returns this
 */
proto.autokitteh.pluginsprovidersvc.GetValuesResponse.prototype.clearValuesMap = function() {
  this.getValuesMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.autokitteh.pluginsprovidersvc.CallValueRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.pluginsprovidersvc.CallValueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.pluginsprovidersvc.CallValueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.pluginsprovidersvc.CallValueRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.pluginsprovidersvc.CallValueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: (f = msg.getValue()) && values_values_pb.Value.toObject(includeInstance, f),
    argsList: jspb.Message.toObjectList(msg.getArgsList(),
    values_values_pb.Value.toObject, includeInstance),
    kwargsMap: (f = msg.getKwargsMap()) ? f.toObject(includeInstance, proto.autokitteh.values.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.pluginsprovidersvc.CallValueRequest}
 */
proto.autokitteh.pluginsprovidersvc.CallValueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.pluginsprovidersvc.CallValueRequest;
  return proto.autokitteh.pluginsprovidersvc.CallValueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.pluginsprovidersvc.CallValueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.pluginsprovidersvc.CallValueRequest}
 */
proto.autokitteh.pluginsprovidersvc.CallValueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new values_values_pb.Value;
      reader.readMessage(value,values_values_pb.Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 3:
      var value = new values_values_pb.Value;
      reader.readMessage(value,values_values_pb.Value.deserializeBinaryFromReader);
      msg.addArgs(value);
      break;
    case 4:
      var value = msg.getKwargsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.autokitteh.values.Value.deserializeBinaryFromReader, "", new proto.autokitteh.values.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.pluginsprovidersvc.CallValueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.pluginsprovidersvc.CallValueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.pluginsprovidersvc.CallValueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.pluginsprovidersvc.CallValueRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      values_values_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getArgsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      values_values_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getKwargsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.autokitteh.values.Value.serializeBinaryToWriter);
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.autokitteh.pluginsprovidersvc.CallValueRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.autokitteh.pluginsprovidersvc.CallValueRequest} returns this
 */
proto.autokitteh.pluginsprovidersvc.CallValueRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional autokitteh.values.Value value = 2;
 * @return {?proto.autokitteh.values.Value}
 */
proto.autokitteh.pluginsprovidersvc.CallValueRequest.prototype.getValue = function() {
  return /** @type{?proto.autokitteh.values.Value} */ (
    jspb.Message.getWrapperField(this, values_values_pb.Value, 2));
};


/**
 * @param {?proto.autokitteh.values.Value|undefined} value
 * @return {!proto.autokitteh.pluginsprovidersvc.CallValueRequest} returns this
*/
proto.autokitteh.pluginsprovidersvc.CallValueRequest.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.pluginsprovidersvc.CallValueRequest} returns this
 */
proto.autokitteh.pluginsprovidersvc.CallValueRequest.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.pluginsprovidersvc.CallValueRequest.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated autokitteh.values.Value args = 3;
 * @return {!Array<!proto.autokitteh.values.Value>}
 */
proto.autokitteh.pluginsprovidersvc.CallValueRequest.prototype.getArgsList = function() {
  return /** @type{!Array<!proto.autokitteh.values.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, values_values_pb.Value, 3));
};


/**
 * @param {!Array<!proto.autokitteh.values.Value>} value
 * @return {!proto.autokitteh.pluginsprovidersvc.CallValueRequest} returns this
*/
proto.autokitteh.pluginsprovidersvc.CallValueRequest.prototype.setArgsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.autokitteh.values.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.autokitteh.values.Value}
 */
proto.autokitteh.pluginsprovidersvc.CallValueRequest.prototype.addArgs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.autokitteh.values.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.autokitteh.pluginsprovidersvc.CallValueRequest} returns this
 */
proto.autokitteh.pluginsprovidersvc.CallValueRequest.prototype.clearArgsList = function() {
  return this.setArgsList([]);
};


/**
 * map<string, autokitteh.values.Value> kwargs = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.autokitteh.values.Value>}
 */
proto.autokitteh.pluginsprovidersvc.CallValueRequest.prototype.getKwargsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.autokitteh.values.Value>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.autokitteh.values.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.autokitteh.pluginsprovidersvc.CallValueRequest} returns this
 */
proto.autokitteh.pluginsprovidersvc.CallValueRequest.prototype.clearKwargsMap = function() {
  this.getKwargsMap().clear();
  return this;};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.autokitteh.pluginsprovidersvc.CallValueResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.autokitteh.pluginsprovidersvc.CallValueResponse.RetCase = {
  RET_NOT_SET: 0,
  RETVAL: 1,
  ERROR: 2
};

/**
 * @return {proto.autokitteh.pluginsprovidersvc.CallValueResponse.RetCase}
 */
proto.autokitteh.pluginsprovidersvc.CallValueResponse.prototype.getRetCase = function() {
  return /** @type {proto.autokitteh.pluginsprovidersvc.CallValueResponse.RetCase} */(jspb.Message.computeOneofCase(this, proto.autokitteh.pluginsprovidersvc.CallValueResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.autokitteh.pluginsprovidersvc.CallValueResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.autokitteh.pluginsprovidersvc.CallValueResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.autokitteh.pluginsprovidersvc.CallValueResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.pluginsprovidersvc.CallValueResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    retval: (f = msg.getRetval()) && values_values_pb.Value.toObject(includeInstance, f),
    error: (f = msg.getError()) && program_error_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.autokitteh.pluginsprovidersvc.CallValueResponse}
 */
proto.autokitteh.pluginsprovidersvc.CallValueResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.autokitteh.pluginsprovidersvc.CallValueResponse;
  return proto.autokitteh.pluginsprovidersvc.CallValueResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.autokitteh.pluginsprovidersvc.CallValueResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.autokitteh.pluginsprovidersvc.CallValueResponse}
 */
proto.autokitteh.pluginsprovidersvc.CallValueResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new values_values_pb.Value;
      reader.readMessage(value,values_values_pb.Value.deserializeBinaryFromReader);
      msg.setRetval(value);
      break;
    case 2:
      var value = new program_error_pb.Error;
      reader.readMessage(value,program_error_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.autokitteh.pluginsprovidersvc.CallValueResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.autokitteh.pluginsprovidersvc.CallValueResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.autokitteh.pluginsprovidersvc.CallValueResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.autokitteh.pluginsprovidersvc.CallValueResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRetval();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      values_values_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      program_error_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional autokitteh.values.Value retval = 1;
 * @return {?proto.autokitteh.values.Value}
 */
proto.autokitteh.pluginsprovidersvc.CallValueResponse.prototype.getRetval = function() {
  return /** @type{?proto.autokitteh.values.Value} */ (
    jspb.Message.getWrapperField(this, values_values_pb.Value, 1));
};


/**
 * @param {?proto.autokitteh.values.Value|undefined} value
 * @return {!proto.autokitteh.pluginsprovidersvc.CallValueResponse} returns this
*/
proto.autokitteh.pluginsprovidersvc.CallValueResponse.prototype.setRetval = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.autokitteh.pluginsprovidersvc.CallValueResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.pluginsprovidersvc.CallValueResponse} returns this
 */
proto.autokitteh.pluginsprovidersvc.CallValueResponse.prototype.clearRetval = function() {
  return this.setRetval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.pluginsprovidersvc.CallValueResponse.prototype.hasRetval = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional autokitteh.program.Error error = 2;
 * @return {?proto.autokitteh.program.Error}
 */
proto.autokitteh.pluginsprovidersvc.CallValueResponse.prototype.getError = function() {
  return /** @type{?proto.autokitteh.program.Error} */ (
    jspb.Message.getWrapperField(this, program_error_pb.Error, 2));
};


/**
 * @param {?proto.autokitteh.program.Error|undefined} value
 * @return {!proto.autokitteh.pluginsprovidersvc.CallValueResponse} returns this
*/
proto.autokitteh.pluginsprovidersvc.CallValueResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.autokitteh.pluginsprovidersvc.CallValueResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.autokitteh.pluginsprovidersvc.CallValueResponse} returns this
 */
proto.autokitteh.pluginsprovidersvc.CallValueResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.autokitteh.pluginsprovidersvc.CallValueResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.autokitteh.pluginsprovidersvc);
