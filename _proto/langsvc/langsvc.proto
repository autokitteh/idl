syntax = "proto3";

package autokitteh.langsvc;

option go_package = "go.autokitteh.dev/idl/go/langsvc";

import "google/api/annotations.proto";
import "validate/validate.proto";

import "program/program.proto";


message Cycle {
  repeated program.Path paths = 1;
}

message Dependencies {
  repeated program.Path ready   = 1;
  repeated program.Path missing = 2;
  repeated Cycle        cycles  = 3;
}

message GetModuleDependenciesRequest {
  program.Module module = 1 [(validate.rules).message.required = true];
}

message GetModuleDependenciesResponse {
  Dependencies deps = 1;
}

message IsCompilerVersionSupportedRequest {
  string lang = 1 {{ Lang }};
  string ver  = 2;
}

message IsCompilerVersionSupportedResponse {
  bool supported = 1;
}

message CompileModuleRequest {
  string          lang     = 1 {{ Lang }};
  repeated string predecls = 2 {{ RepeatedPredecl }};
  program.Path    path     = 3 [(validate.rules).message.required = true];
  bytes           src      = 4;
  bool            get_deps = 6;
}

message CompileModuleResponse {
  program.Module module = 1 [(validate.rules).message.required = true];
  Dependencies   deps   = 2; // if req.get_deps. only the ready field is populated for now.
}

message ListLangsRequest {}

message CatalogLang {
  repeated string exts = 1;
}

message ListLangsResponse {
  map<string, CatalogLang> langs = 1 [(validate.rules).map={no_sparse: true, keys:{string:{min_len: 1}}}];
}

service Lang {
  rpc ListLangs(ListLangsRequest) returns (ListLangsResponse) {
    option (google.api.http) = {
      get: "/api/v1/langs/list",
    };
  }

  rpc IsCompilerVersionSupported(IsCompilerVersionSupportedRequest) returns (IsCompilerVersionSupportedResponse) {
    option (google.api.http) = {
      get: "/api/v1/langs/{lang}/{ver}/support",
    };
  }

  rpc GetModuleDependencies(GetModuleDependenciesRequest) returns (GetModuleDependenciesResponse) {
    option (google.api.http) = {
      post: "/api/v1/langs/module-deps",
      body: "*"
    };
  }

  rpc CompileModule(CompileModuleRequest) returns (CompileModuleResponse) {
    option (google.api.http) = {
      post: "/api/v1/langs/compile",
      body: "*"
    };
  }
}
