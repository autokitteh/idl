syntax = "proto3";

package autokitteh.programssvc;

option go_package = "go.autokitteh.dev/idl/go/programssvc";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

import "program/program.proto";


message GetRequest {
  string       project_id  = 1 {{ ProjectID }};
  program.Path path        = 2;
  string       raw_path    = 3; // if set, overrides path.
  bool         omit_source = 4; // if set, source is not returned.
}

message GetResponse {
  program.Path              path       = 1 [(validate.rules).message.required = true];
  bytes                     source     = 2;
  google.protobuf.Timestamp fetched_at = 3;
}

service Programs {
  rpc Get(GetRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/api/v1/programs/{project_id}/{raw_path=**}"
    };
  }
}
