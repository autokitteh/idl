syntax = "proto3";

package autokitteh.eventsrc;

option go_package = "go.autokitteh.dev/idl/go/eventsrc";

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";


message EventSourceSettings {
  bool            enabled = 1;
  repeated string types   = 2; // emitted event types.

  // TODO: callback for eventsrc events: added, removed, etc.

  // TODO: auth from eventsrc.
}

message EventSource {
  string id = 1 {{ EventSourceID }};

  EventSourceSettings settings = 3;

  google.protobuf.Timestamp created_at = 100;
  google.protobuf.Timestamp updated_at = 101;
}

message EventSourceProjectBindingSettings {
  bool enabled = 1;
}

// Need to negotiate with event source to determine if eligible to receive events.
// Essentially this should be carefully managed by the system and not the user
// to prevent unwanted projects getting events.
message EventSourceProjectBinding {
  string src_id            = 1 {{ EventSourceID }};
  string project_id        = 2 {{ ProjectID }};
  string name              = 3 {{ MaybeVarName }}; // might not be set if not approved.
  string association_token = 4; // "multicast group" set by source.
  string source_config     = 5; //                   set by source.
  bool   approved          = 6;

  EventSourceProjectBindingSettings settings = 10;

  google.protobuf.Timestamp created_at = 100;
  google.protobuf.Timestamp updated_at = 101;
}
