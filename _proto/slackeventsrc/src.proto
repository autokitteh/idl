syntax = "proto3";

package autokitteh.slackeventsrc;

option go_package = "go.autokitteh.dev/idl/go/slackeventsrc";

import "google/api/annotations.proto";
import "validate/validate.proto";


message BindRequest {
  string project_id = 1 {{ ProjectID }};
  string name       = 2 {{ VarName }};
  string team_id    = 3 [(validate.rules).string.min_len = 1];
}

message BindResponse {}

message UnbindRequest {
  string project_id = 1 {{ ProjectID }};
  string name       = 2 {{ VarName }};
}

message UnbindResponse {}


service SlackEventSource {
  rpc Bind(BindRequest) returns (BindResponse) {
    option (google.api.http) = {
      post: "/api/v1/slacksrc/bind",
      body: "*"
    };
  }

  rpc Unbind(UnbindRequest) returns (UnbindResponse) {
    option (google.api.http) = {
      post: "/api/v1/slacksrc/unbind",
      body: "*"
    };
  }
}

