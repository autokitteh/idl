"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import program.program_pb2
import typing
import typing_extensions
import values.values_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class ProjectPlugin(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PLUGIN_ID_FIELD_NUMBER: builtins.int
    ENABLED_FIELD_NUMBER: builtins.int
    plugin_id: typing.Text
    enabled: builtins.bool
    def __init__(self,
        *,
        plugin_id: typing.Text = ...,
        enabled: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled","plugin_id",b"plugin_id"]) -> None: ...
global___ProjectPlugin = ProjectPlugin

class ProjectSettings(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class PredeclsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> values.values_pb2.Value: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[values.values_pb2.Value] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class MemoEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    ENABLED_FIELD_NUMBER: builtins.int
    MAIN_PATH_FIELD_NUMBER: builtins.int
    PREDECLS_FIELD_NUMBER: builtins.int
    PLUGINS_FIELD_NUMBER: builtins.int
    MEMO_FIELD_NUMBER: builtins.int
    name: typing.Text
    enabled: builtins.bool
    @property
    def main_path(self) -> program.program_pb2.Path: ...
    @property
    def predecls(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, values.values_pb2.Value]: ...
    @property
    def plugins(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ProjectPlugin]: ...
    @property
    def memo(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """General human readable data about the project.
        Not used for any automation.
        """
        pass
    def __init__(self,
        *,
        name: typing.Text = ...,
        enabled: builtins.bool = ...,
        main_path: typing.Optional[program.program_pb2.Path] = ...,
        predecls: typing.Optional[typing.Mapping[typing.Text, values.values_pb2.Value]] = ...,
        plugins: typing.Optional[typing.Iterable[global___ProjectPlugin]] = ...,
        memo: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["main_path",b"main_path"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled","main_path",b"main_path","memo",b"memo","name",b"name","plugins",b"plugins","predecls",b"predecls"]) -> None: ...
global___ProjectSettings = ProjectSettings

class Project(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    ACCOUNT_NAME_FIELD_NUMBER: builtins.int
    SETTINGS_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    UPDATED_AT_FIELD_NUMBER: builtins.int
    id: typing.Text
    """must be populated when in the db."""

    account_name: typing.Text
    @property
    def settings(self) -> global___ProjectSettings: ...
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def updated_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(self,
        *,
        id: typing.Text = ...,
        account_name: typing.Text = ...,
        settings: typing.Optional[global___ProjectSettings] = ...,
        created_at: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        updated_at: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["created_at",b"created_at","settings",b"settings","updated_at",b"updated_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["account_name",b"account_name","created_at",b"created_at","id",b"id","settings",b"settings","updated_at",b"updated_at"]) -> None: ...
global___Project = Project
