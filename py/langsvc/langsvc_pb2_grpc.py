# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from langsvc import langsvc_pb2 as langsvc_dot_langsvc__pb2


class LangStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListLangs = channel.unary_unary(
                '/autokitteh.langsvc.Lang/ListLangs',
                request_serializer=langsvc_dot_langsvc__pb2.ListLangsRequest.SerializeToString,
                response_deserializer=langsvc_dot_langsvc__pb2.ListLangsResponse.FromString,
                )
        self.IsCompilerVersionSupported = channel.unary_unary(
                '/autokitteh.langsvc.Lang/IsCompilerVersionSupported',
                request_serializer=langsvc_dot_langsvc__pb2.IsCompilerVersionSupportedRequest.SerializeToString,
                response_deserializer=langsvc_dot_langsvc__pb2.IsCompilerVersionSupportedResponse.FromString,
                )
        self.GetModuleDependencies = channel.unary_unary(
                '/autokitteh.langsvc.Lang/GetModuleDependencies',
                request_serializer=langsvc_dot_langsvc__pb2.GetModuleDependenciesRequest.SerializeToString,
                response_deserializer=langsvc_dot_langsvc__pb2.GetModuleDependenciesResponse.FromString,
                )
        self.CompileModule = channel.unary_unary(
                '/autokitteh.langsvc.Lang/CompileModule',
                request_serializer=langsvc_dot_langsvc__pb2.CompileModuleRequest.SerializeToString,
                response_deserializer=langsvc_dot_langsvc__pb2.CompileModuleResponse.FromString,
                )


class LangServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListLangs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsCompilerVersionSupported(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetModuleDependencies(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompileModule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LangServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListLangs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLangs,
                    request_deserializer=langsvc_dot_langsvc__pb2.ListLangsRequest.FromString,
                    response_serializer=langsvc_dot_langsvc__pb2.ListLangsResponse.SerializeToString,
            ),
            'IsCompilerVersionSupported': grpc.unary_unary_rpc_method_handler(
                    servicer.IsCompilerVersionSupported,
                    request_deserializer=langsvc_dot_langsvc__pb2.IsCompilerVersionSupportedRequest.FromString,
                    response_serializer=langsvc_dot_langsvc__pb2.IsCompilerVersionSupportedResponse.SerializeToString,
            ),
            'GetModuleDependencies': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModuleDependencies,
                    request_deserializer=langsvc_dot_langsvc__pb2.GetModuleDependenciesRequest.FromString,
                    response_serializer=langsvc_dot_langsvc__pb2.GetModuleDependenciesResponse.SerializeToString,
            ),
            'CompileModule': grpc.unary_unary_rpc_method_handler(
                    servicer.CompileModule,
                    request_deserializer=langsvc_dot_langsvc__pb2.CompileModuleRequest.FromString,
                    response_serializer=langsvc_dot_langsvc__pb2.CompileModuleResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'autokitteh.langsvc.Lang', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Lang(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListLangs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/autokitteh.langsvc.Lang/ListLangs',
            langsvc_dot_langsvc__pb2.ListLangsRequest.SerializeToString,
            langsvc_dot_langsvc__pb2.ListLangsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsCompilerVersionSupported(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/autokitteh.langsvc.Lang/IsCompilerVersionSupported',
            langsvc_dot_langsvc__pb2.IsCompilerVersionSupportedRequest.SerializeToString,
            langsvc_dot_langsvc__pb2.IsCompilerVersionSupportedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetModuleDependencies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/autokitteh.langsvc.Lang/GetModuleDependencies',
            langsvc_dot_langsvc__pb2.GetModuleDependenciesRequest.SerializeToString,
            langsvc_dot_langsvc__pb2.GetModuleDependenciesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CompileModule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/autokitteh.langsvc.Lang/CompileModule',
            langsvc_dot_langsvc__pb2.CompileModuleRequest.SerializeToString,
            langsvc_dot_langsvc__pb2.CompileModuleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
