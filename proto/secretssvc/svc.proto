syntax = "proto3";

package autokitteh.secretssvc;

option go_package = "go.autokitteh.dev/idl/go/secretssvc";

import "google/api/annotations.proto";
import "validate/validate.proto";


message SetRequest {
  string project_id = 1 [(validate.rules).string.pattern = "^[a-zA-Z][0-9a-zA-Z_-]+\\.[a-zA-Z0-9_-]+$"];
  string name       = 2 [(validate.rules).string.pattern = "^[a-zA-Z_][a-zA-Z0-9_]*$"];
  string value      = 3; // omit to delete.
}

message SetResponse {}

message GetRequest {
  string project_id = 1 [(validate.rules).string.pattern = "^[a-zA-Z][0-9a-zA-Z_-]+\\.[a-zA-Z0-9_-]+$"];
  string name       = 2 [(validate.rules).string.pattern = "^[a-zA-Z_][a-zA-Z0-9_]*$"];
}

message GetResponse {
  string value = 1;
}

message ListRequest {
  string project_id = 1 [(validate.rules).string.pattern = "^[a-zA-Z][0-9a-zA-Z_-]+\\.[a-zA-Z0-9_-]+$"];
}

message ListResponse {
  repeated string names = 1;
}

service Secrets {
  rpc Set(SetRequest) returns (SetResponse) {
    option (google.api.http) = {
      post: "/api/v1/secrets/{project_id}/{name}"
      body: "*"
    };
  }

  rpc Get(GetRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/api/v1/secrets/{project_id}/{name}"
    };
  }

  rpc List(ListRequest) returns (ListResponse) {
    option (google.api.http) = {
      get: "/api/v1/secrets/{project_id}"
    };
  }
}
