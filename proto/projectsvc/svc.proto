syntax = "proto3";

package autokitteh.projectsvc;

option go_package = "go.autokitteh.dev/idl/go/projectsvc";

import "google/api/annotations.proto";
import "validate/validate.proto";

import "project/project.proto";


message CreateProjectRequest {
  string                  account_name = 1 [(validate.rules).string.pattern = "^[a-zA-Z][0-9a-zA-Z_-]+$"];
  string                  id           = 2 [(validate.rules).string = {ignore_empty:true, pattern: "^[a-zA-Z][0-9a-zA-Z_-]+\\.[a-zA-Z0-9_-]+$" }];
  project.ProjectSettings settings     = 3 [(validate.rules).message.required = true];
}

message CreateProjectResponse {
  string id = 1 [(validate.rules).string.pattern = "^[a-zA-Z][0-9a-zA-Z_-]+\\.[a-zA-Z0-9_-]+$"];
}

message UpdateProjectRequest {
  string                  id       = 1 [(validate.rules).string.pattern = "^[a-zA-Z][0-9a-zA-Z_-]+\\.[a-zA-Z0-9_-]+$"];
  project.ProjectSettings settings = 2 [(validate.rules).message.required = true];
}

message UpdateProjectResponse {}

message RemoveProjectRequest {
  string id = 1 [(validate.rules).string.pattern = "^[a-zA-Z][0-9a-zA-Z_-]+\\.[a-zA-Z0-9_-]+$"];
}

message RemoveProjectResponse {}

message GetProjectRequest {
  string id            = 1 [(validate.rules).string.pattern = "^[a-zA-Z][0-9a-zA-Z_-]+\\.[a-zA-Z0-9_-]+$"];
}

message GetProjectResponse {
  project.Project project = 1 [(validate.rules).message.required = true];
}

message GetProjectsRequest {
  repeated string ids = 1 [(validate.rules).repeated.items.string.pattern = "^[a-zA-Z][0-9a-zA-Z_-]+\\.[a-zA-Z0-9_-]+$"];
}

message GetProjectsResponse {
  repeated project.Project projects = 1 [(validate.rules).repeated.items.message.required = true];
}

service Projects {
  rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse) {
    option (google.api.http) = {
      post: "/api/v1/projects",
      body: "*"
    };
  }

  rpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse) {
    option (google.api.http) = {
      post: "/api/v1/projects/{id}",
      body: "*"
    };
  }

  rpc GetProject(GetProjectRequest) returns (GetProjectResponse) {
    option (google.api.http) = {
      get: "/api/v1/projects/{id}",
    };
  }

  rpc GetProjects(GetProjectsRequest) returns (GetProjectsResponse) {
    option (google.api.http) = {
      post: "/api/v1/projects",
      body: "*"
    };
  }
}
